<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ArchLinux Install i3</title>
    <link href="/2024/08/21/ArchLInux%20Install%20I3/"/>
    <url>/2024/08/21/ArchLInux%20Install%20I3/</url>
    
    <content type="html"><![CDATA[<h1 id="ArchLinux-安装-i3-Windows-Manager"><a href="#ArchLinux-安装-i3-Windows-Manager" class="headerlink" title="ArchLinux 安装 i3 Windows Manager"></a>ArchLinux 安装 i3 Windows Manager</h1><blockquote><p>参考文章：</p><p>【1】：<a href="https://www.zzxworld.com/posts/install_and_config_desktop_environment_on_arch_linux">Arch Linux 安装并配置桌面环境</a></p><p>【2】：互联网</p></blockquote><h2 id="安装-xorg"><a href="#安装-xorg" class="headerlink" title="安装 xorg"></a>安装 xorg</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># xorg-server,xorg-xinit : xorg 基本配件</span><br><span class="hljs-comment"># xfce4-terminal : 终端软件，可以用 kitty 代替</span><br><span class="hljs-comment"># i3 : i3 所有套件</span><br><span class="hljs-comment"># archlinux-wallpaper : archlinux 壁纸</span><br>sudo pacman -S xorg-server xorg-xinit xfce4-terminal i3 archlinux-wallpaper<br></code></pre></td></tr></table></figure><h2 id="编辑-xinit"><a href="#编辑-xinit" class="headerlink" title="编辑 xinit"></a>编辑 xinit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> -a /etc/X11/xinit/xinitrc .<br>sudo <span class="hljs-built_in">chown</span> wind xinitrc<br>sudo <span class="hljs-built_in">chgrp</span> wind xinitrc<br><span class="hljs-built_in">mv</span> xinitrc .xinitrc<br><br>vim .xinitrc<br><br><span class="hljs-comment"># 删除下面</span><br>twm &amp;<br>xclock -geometry 50x50-1+1 &amp;<br>xterm -geometry 80x50+494+51 &amp;<br>xterm -geometry 80x20+494-0 &amp;<br><span class="hljs-built_in">exec</span> xterm -geometry 80x66+0+0 -name login<br><br><span class="hljs-comment"># 添加下面</span><br><span class="hljs-built_in">exec</span> i3<br></code></pre></td></tr></table></figure><ul><li>以上命令可以用一句命令就行 <code>echo &#39;exec i3&#39; &gt; ~/.xinitrc</code></li></ul><h2 id="进入-i3-并配置"><a href="#进入-i3-并配置" class="headerlink" title="进入 i3 并配置"></a>进入 i3 并配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入i3</span><br>startx<br></code></pre></td></tr></table></figure><p>两次回车后按 <code>win + enter</code> 键启动终端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># rofi : 搜索软件，类似于 windows 上的 listary</span><br><span class="hljs-comment"># picom : 特效软件</span><br><span class="hljs-comment"># tint2 : 状态栏软件，可以用 polybar 替代</span><br><span class="hljs-comment"># feh : 设置背景图片软件</span><br>sudo pacman -S rofi picom tint2 feh<br></code></pre></td></tr></table></figure><p>配置 i3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim .config/i3/config<br><br><span class="hljs-comment"># 更改以下行</span><br><span class="hljs-comment"># bindsym $mod+d exec --no-startup-id dmenu_run</span><br>bindsym <span class="hljs-variable">$mod</span>+d <span class="hljs-built_in">exec</span> --no-startup-id rofi -show run<br><br><span class="hljs-comment"># 停用 i3bar 并添加新的指令</span><br><span class="hljs-comment"># bar &#123;</span><br><span class="hljs-comment">#         status_command i3status</span><br><span class="hljs-comment"># &#125;</span><br>gaps inner 2                             <span class="hljs-comment"># 设置边距</span><br>gaps outer 2                             <span class="hljs-comment"># 同上</span><br>bindsym <span class="hljs-variable">$mod</span>+n border normal             <span class="hljs-comment"># win/alt + n 正常边距</span><br>bindsym <span class="hljs-variable">$mod</span>+u border none<br><span class="hljs-comment"># 开启特效，需配置</span><br><span class="hljs-built_in">exec</span> --no-startup-id picom --no-vsync<br><span class="hljs-comment"># 开启状态栏</span><br><span class="hljs-built_in">exec</span> --no-startup-id tint2<br><span class="hljs-comment"># 如果不时虚拟机不用添加下面一行</span><br><span class="hljs-built_in">exec</span> --no-startup-id vmware-user-suid-wrapper<br><span class="hljs-comment"># 指定 i3 壁纸</span><br><span class="hljs-built_in">exec</span> --no-startup-id feh --randomize --bg-fill /usr/share/backgrounds/archlinux<br><span class="hljs-comment"># 开启音量</span><br><span class="hljs-built_in">exec</span> --no-startup-id pulseaudio --start -D<br></code></pre></td></tr></table></figure><p>最后退出 i3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">i3 <span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><h2 id="安装-LightDM"><a href="#安装-LightDM" class="headerlink" title="安装 LightDM"></a>安装 LightDM</h2><ul><li><a href="https://github.com/canonical/lightdm">LightDM</a> 是一个 X display manager，是一个登录图形界面，i3 是一个桌面管理器，不是同一个东西</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 lightdm</span><br>sudo pacman -S lightdm lightdm-gtk-greeter<br><span class="hljs-comment"># 设置开机自启动 lightdm 服务</span><br>sudo systemctl <span class="hljs-built_in">enable</span> lightdm.service<br></code></pre></td></tr></table></figure><ul><li>重启系统，开机就会直接看到图形化的登录界面了：右上角可以切换桌面进行登录</li></ul><h2 id="更改-lightdm-背景"><a href="#更改-lightdm-背景" class="headerlink" title="更改 lightdm 背景"></a>更改 <code>lightdm</code> 背景</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 编辑配置文件</span><br>sudo vim /etc/lightdm/lightdm-gtk-greeter.conf<br></code></pre></td></tr></table></figure><p>添加以下内容，其中 <code>/usr/share/backgrounds/archlinux/snow.jpg</code> 是壁纸文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs conf">[greeter]<br>background=/usr/share/backgrounds/archlinux/snow.jpg<br></code></pre></td></tr></table></figure><h2 id="更改屏幕分辨率"><a href="#更改屏幕分辨率" class="headerlink" title="更改屏幕分辨率"></a>更改屏幕分辨率</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 xrandr</span><br>sudo pacman -S xorg-xrandr<br><span class="hljs-comment"># 查看信息</span><br>xrandr<br><span class="hljs-comment"># 为 Virtual-1 设备改变分辨率：1920x1080</span><br>xrandr --output Virtual-1 --mode 1920x1080<br></code></pre></td></tr></table></figure><h2 id="配置终端字体"><a href="#配置终端字体" class="headerlink" title="配置终端字体"></a>配置终端字体</h2><h3 id="下载安装字体"><a href="#下载安装字体" class="headerlink" title="下载安装字体"></a>下载安装字体</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 unzip 解压工具，wget 下载工具</span><br>sudo pacman -S unzip wget<br><span class="hljs-comment"># 创建字体目录存放字体，其中 NerdFonts 名字随意，但 fonts 名字不随意</span><br><span class="hljs-built_in">mkdir</span> ~/.local/share/fonts/NerdFonts<br><span class="hljs-comment"># 下载 nerdfonts 字体</span><br>wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/CascadiaCode.zip -O ~/.local/share/fonts/NerdFonts/CascadiaCode.zip<br><br><span class="hljs-comment"># 到目录</span><br><span class="hljs-built_in">cd</span> ~/.local/share/fonts/NerdFonts<br><span class="hljs-comment"># 解压字体</span><br>unzip CascadiaCode.zip<br><span class="hljs-comment"># 删除用不上的文件</span><br><span class="hljs-built_in">rm</span> -rf CascadiaCode.zip README.md LICENSE<br></code></pre></td></tr></table></figure><h3 id="配置终端"><a href="#配置终端" class="headerlink" title="配置终端"></a>配置终端</h3><ul><li>我用的是 <a href="https://github.com/kovidgoyal/kitty">kitty</a> 终端，可以参照 <a href="https://sw.kovidgoyal.net/kitty/conf/">官方文档</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建 kitty 配置文件</span><br><span class="hljs-built_in">mkdir</span> -p ~/.config/kitty<br>vim ~/.config/kitty/kitty.conf<br></code></pre></td></tr></table></figure><p>输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs conf">font_family      CascadiaCode<br>bold_font        auto<br>italic_font      auto<br>bold_italic_font auto<br>font_size 15.0<br></code></pre></td></tr></table></figure><h2 id="更改状态栏从-tint2-到-polybar"><a href="#更改状态栏从-tint2-到-polybar" class="headerlink" title="更改状态栏从 tint2 到 polybar"></a>更改状态栏从 tint2 到 <a href="https://github.com/polybar/polybar">polybar</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 删除 tint2</span><br>sudo pacman -Rsn tint2<br><span class="hljs-comment"># 删除 tint2 的配置文件</span><br><span class="hljs-built_in">rm</span> -rf ~/.config/tint2<br><br><span class="hljs-comment"># 安装 polybar</span><br>sudo pacman -S polybar<br><br><span class="hljs-comment"># 退出 i3 重新登录</span><br>i3 <span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><h3 id="配置-polybar"><a href="#配置-polybar" class="headerlink" title="配置 polybar"></a>配置 <a href="https://github.com/polybar/polybar">polybar</a></h3><ul><li>可以参照官方文档</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建配置目录</span><br><span class="hljs-built_in">mkdir</span> -p ~/.config/polybar<br><span class="hljs-comment"># 复制官方配置文件到配置目录</span><br><span class="hljs-built_in">cp</span> /etc/polybar/config.ini ~/.config/polybar<br><span class="hljs-comment"># 如果有权限问题，更改权限为 user 其中 user 是你的用户名和你所在的用户组</span><br><span class="hljs-built_in">chown</span> user config.ini<br><span class="hljs-built_in">chgrp</span> user config.ini<br></code></pre></td></tr></table></figure><ul><li>编写 <a href="https://github.com/polybar/polybar">polybar</a> 启动脚本，例如：launch.sh</li><li>其中 <code>mybar</code> 是 <code>config.ini</code> 文件中的 bar 名字</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/usr/bin/env bash</span><br><br><span class="hljs-comment">#launch.sh</span><br><br><span class="hljs-comment"># Terminate already running bar instances</span><br><span class="hljs-comment"># If all your bars have ipc enabled, you can use </span><br>polybar-msg cmd quit<br><span class="hljs-comment"># Otherwise you can use the nuclear option:</span><br><span class="hljs-comment"># killall -q polybar</span><br><br><span class="hljs-comment"># Launch mybar</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;---&quot;</span> | <span class="hljs-built_in">tee</span> -a /tmp/polybar.log<br>polybar mybar 2&gt;&amp;1 | <span class="hljs-built_in">tee</span> -a /tmp/polybar.log &amp; <span class="hljs-built_in">disown</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Bars launched...&quot;</span><br></code></pre></td></tr></table></figure><ul><li>给其他用户执行 launch.sh 脚本的权限，不然启动不了</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x <span class="hljs-variable">$HOME</span>/.config/polybar/launch.sh<br></code></pre></td></tr></table></figure><ul><li>更改 i3 配置文件启动 launch.sh 脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 删除 tint2</span><br><span class="hljs-built_in">exec</span> --no-startup-id tint2<br><span class="hljs-comment"># 添加下面内容</span><br>exec_always --no-startup-id <span class="hljs-variable">$HOME</span>/.config/polybar/launch.sh<br></code></pre></td></tr></table></figure><ul><li>退出 i3 重新登录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">i3 <span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ArchLinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArchLinux Clean Space</title>
    <link href="/2024/08/21/Archlinux%20%E6%B8%85%E7%90%86%E7%A9%BA%E9%97%B4/"/>
    <url>/2024/08/21/Archlinux%20%E6%B8%85%E7%90%86%E7%A9%BA%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="Archlinux-清理空间"><a href="#Archlinux-清理空间" class="headerlink" title="Archlinux 清理空间"></a>Archlinux 清理空间</h1><blockquote><p>参考文章：</p><p>【1】：<a href="https://blog.csdn.net/chizhan8323/article/details/100731941">archlinux清理一下空间_chizhan8323的博客-CSDN博客</a></p><p>【2】：<a href="https://blog.csdn.net/qq_41601836/article/details/106519865">pacman的包管理命令_pacman清理无用的包-CSDN博客</a></p></blockquote><h2 id="日志清理"><a href="#日志清理" class="headerlink" title="日志清理"></a>日志清理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 显示日志占用空间</span><br>journalctl --disk-usage<br><span class="hljs-comment"># 设置日志占用空间</span><br>journalctl --vacuum-size=50M<br></code></pre></td></tr></table></figure><h2 id="Pacman-清理"><a href="#Pacman-清理" class="headerlink" title="Pacman 清理"></a>Pacman 清理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 清理缓存</span><br>sudo pacman -Sc<br><br><span class="hljs-comment"># 查询孤儿软件并删除掉他们</span><br>sudo pacman -R $(sudo pacman -Qdtq)<br><br><span class="hljs-comment"># 删除软件时删除相关依赖和配置文件</span><br>sudo pacman -Rns &lt;package&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ArchLinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArchLinux Install zim</title>
    <link href="/2024/08/21/archlinux%20%E5%AE%89%E8%A3%85%20zim/"/>
    <url>/2024/08/21/archlinux%20%E5%AE%89%E8%A3%85%20zim/</url>
    
    <content type="html"><![CDATA[<h1 id="archlinux-安装-zim"><a href="#archlinux-安装-zim" class="headerlink" title="archlinux 安装 zim"></a>archlinux 安装 zim</h1><ul><li>安装 <a href="https://www.zsh.org/">zsh</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S zsh<br></code></pre></td></tr></table></figure><ul><li>切换 shell</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 切换当前用户的 shell</span><br>chsh -s /bin/zsh<br></code></pre></td></tr></table></figure><ul><li>打开 <a href="https://github.com/zimfw/zimfw">Zim</a> 官网，找到 Automatic installation，复制命令安装</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># use curl to install</span><br>curl -fsSL https://raw.githubusercontent.com/zimfw/install/master/install.zsh | zsh<br><br><span class="hljs-comment"># use wget to install</span><br>wget -nv -O - https://raw.githubusercontent.com/zimfw/install/master/install.zsh | zsh<br></code></pre></td></tr></table></figure><ul><li>更改 zshell 匹配规则</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 编辑 .zshrc文件</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;set nonomatch&quot;</span> &gt; ~/.zshrc<br></code></pre></td></tr></table></figure><h2 id="安装-powerlevel10k"><a href="#安装-powerlevel10k" class="headerlink" title="安装 powerlevel10k"></a>安装 <a href="https://github.com/romkatv/powerlevel10k">powerlevel10k</a></h2><p>打开官网：<a href="https://github.com/romkatv/powerlevel10k">https://github.com/romkatv/powerlevel10k</a></p><p>找到：<code>Installation</code> ，按照指示进行安装</p><p>比如 <code>zim</code> ：Add <code>zmodule romkatv/powerlevel10k --use degit</code> to <code>~/.zimrc</code> and run <code>zimfw install</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 添加模块到配置文件</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;zmodule romkatv/powerlevel10k --use degit&#x27;</span> &gt;&gt; ~/.zimrc<br><span class="hljs-comment"># 安装模块</span><br>zimfw install<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ArchLinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArchLinux Install yay</title>
    <link href="/2024/08/20/ArchLinux%20%E5%AE%89%E8%A3%85%20yay/"/>
    <url>/2024/08/20/ArchLinux%20%E5%AE%89%E8%A3%85%20yay/</url>
    
    <content type="html"><![CDATA[<h1 id="ArchLinux-安装-yay"><a href="#ArchLinux-安装-yay" class="headerlink" title="ArchLinux 安装 yay"></a>ArchLinux 安装 yay</h1><blockquote><p>参考文章：</p><p>【1】：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinuxcn/">archlinuxcn | 镜像站使用帮助</a></p><p>【2】：<a href="https://www.archlinuxcn.org/archlinuxcn-keyring-manually-trust-farseerfc-key/">新系统中安装 archlinuxcn-keyring 包前需要手动信任 farseerfc 的 key</a></p></blockquote><h2 id="安装-yay"><a href="#安装-yay" class="headerlink" title="安装 yay"></a>安装 yay</h2><ul><li><p>打开官网 <a href="https://github.com/Jguer/yay">yay</a></p></li><li><p>找到 <code>Installation</code> ，在普通用户下进行操作</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装依赖</span><br>sudo pacman -S --needed git base-devel<br><span class="hljs-comment"># 下载仓库</span><br>git <span class="hljs-built_in">clone</span> https://aur.archlinux.org/yay.git --depth=1<br><span class="hljs-comment"># 切到目录 yay</span><br><span class="hljs-built_in">cd</span> yay<br><span class="hljs-comment"># 安装</span><br>makepkg -si<br></code></pre></td></tr></table></figure><h2 id="添加-archlinuxcn-的镜像源"><a href="#添加-archlinuxcn-的镜像源" class="headerlink" title="添加 archlinuxcn 的镜像源"></a>添加 archlinuxcn 的镜像源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载所有的镜像</span><br>sudo wget https://raw.githubusercontent.com/archlinuxcn/mirrorlist-repo/master/archlinuxcn-mirrorlist -O /etc/pacman.d/mirrorlistcn<br><span class="hljs-comment"># 去掉文件 /etc/pacman.d/mirrorlistcn 中的链接前的 # 号</span><br><span class="hljs-comment"># 例如 tsinghua , aliyun 等源</span><br></code></pre></td></tr></table></figure><p>添加下面内容到  <code>/etc/pacman.conf</code> 文件中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs conf">[archlinuxcn]<br>Include = /etc/pacman.d/mirrorlistcn<br></code></pre></td></tr></table></figure><p>手动信任 farseerfc 的 key</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman-key --lsign-key <span class="hljs-string">&quot;farseerfc@archlinux.org&quot;</span><br></code></pre></td></tr></table></figure><p>安装 archlinuxcn-keyring</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo pacman -Sy archlinuxcn-keyring<br></code></pre></td></tr></table></figure><h2 id="安装-joshuto"><a href="#安装-joshuto" class="headerlink" title="安装 joshuto"></a>安装 <a href="https://github.com/kamiyaa/joshuto">joshuto</a></h2><ul><li><p><a href="https://github.com/kamiyaa/joshuto">joshuto</a> 是一个 终端文件管理器</p></li><li><p>类似的有 <a href="https://github.com/ranger/ranger">ranger</a> , <a href="https://github.com/sxyazi/yazi">yazi</a> 等等</p></li><li><p>安装</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yay -S joshuto<br></code></pre></td></tr></table></figure><ul><li>配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建配置文件夹</span><br><span class="hljs-built_in">mkdir</span> ~/.config/joshuto<br><span class="hljs-comment"># 创建配置文件</span><br><span class="hljs-built_in">touch</span> ~/.config/joshuto.toml<br></code></pre></td></tr></table></figure><ul><li>为配置文件 <code>~/.config/joshuto.toml</code> 添加下面内容，详细配置可看官方文档</li></ul><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-comment"># ~/.config/joshuto.toml</span><br><span class="hljs-attr">scroll_offset</span> = <span class="hljs-number">6</span><br><span class="hljs-attr">xdg_open</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">xdg_open_fork</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">use_trash</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">watch_files</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">focus_on_create</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">max_preview_size</span> = <span class="hljs-number">2097152</span> <span class="hljs-comment"># 2MB</span><br><span class="hljs-section">[display]</span><br><span class="hljs-attr">mode</span> = <span class="hljs-string">&quot;default&quot;</span><br><span class="hljs-attr">collapse_preview</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">column_ratio</span> = [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br><span class="hljs-attr">show_borders</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">show_hidden</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">show_icons</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">tilde_in_titlebar</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">line_number_style</span> = <span class="hljs-string">&quot;none&quot;</span><br><span class="hljs-attr">linemode</span> = <span class="hljs-string">&quot;size&quot;</span><br><span class="hljs-section">[display.sort]</span><br><span class="hljs-attr">sort_method</span> = <span class="hljs-string">&quot;natural&quot;</span><br><span class="hljs-attr">case_sensitive</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">directories_first</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">reverse</span> = <span class="hljs-literal">false</span><br><span class="hljs-section">[preview]</span><br><span class="hljs-attr">max_preview_size</span> = <span class="hljs-number">2097152</span><br><span class="hljs-attr">preview_script</span> = <span class="hljs-string">&quot;~/.config/joshuto/preview_file.sh&quot;</span><br><span class="hljs-section">[search]</span><br><span class="hljs-attr">string_case_sensitivity</span> = <span class="hljs-string">&quot;insensitive&quot;</span><br><span class="hljs-attr">glob_case_sensitivity</span> = <span class="hljs-string">&quot;sensitive&quot;</span><br><span class="hljs-attr">regex_case_sensitivity</span> = <span class="hljs-string">&quot;sensitive&quot;</span><br><span class="hljs-attr">fzf_case_sensitivity</span> = <span class="hljs-string">&quot;insensitive&quot;</span><br><span class="hljs-section">[cmd_aliases]</span><br><span class="hljs-section">[tab]</span><br><span class="hljs-attr">home_page</span> = <span class="hljs-string">&quot;home&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ArchLinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS Install Latest ZShell</title>
    <link href="/2024/03/13/CentOS_Install_Latest_ZShell/"/>
    <url>/2024/03/13/CentOS_Install_Latest_ZShell/</url>
    
    <content type="html"><![CDATA[<h1 id="6-安装最新版ZSH-Shell"><a href="#6-安装最新版ZSH-Shell" class="headerlink" title="6. 安装最新版ZSH Shell"></a>6. 安装最新版ZSH Shell</h1><ul><li>首先切换到root用户： <code>su -</code></li></ul><h2 id="6-1-卸载低版本zsh"><a href="#6-1-卸载低版本zsh" class="headerlink" title="6.1 卸载低版本zsh"></a>6.1 卸载低版本zsh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 卸载当前版本</span><br>yum -y remove zsh<br></code></pre></td></tr></table></figure><h2 id="6-2-下载源码"><a href="#6-2-下载源码" class="headerlink" title="6.2 下载源码"></a>6.2 下载源码</h2><ul><li>源码：<a href="https://zsh.sourceforge.io/Arc/source.html">https://zsh.sourceforge.io/Arc/source.html</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 如果没有wget就先安装wget</span><br>yum -y install wget<br><br><span class="hljs-comment"># 下载</span><br>wget https://sourceforge.net/projects/zsh/files/zsh/5.9/zsh-5.9.tar.xz<br><br><span class="hljs-comment"># 解压</span><br>tar -xvf zsh-5.9.tar.xz<br></code></pre></td></tr></table></figure><h2 id="6-3-编译安装"><a href="#6-3-编译安装" class="headerlink" title="6.3 编译安装"></a>6.3 编译安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装编译工具</span><br>yum install gcc perl-ExtUtils-MakeMaker<br>yum install ncurses-devel<br><br><span class="hljs-comment"># 进入源码目录</span><br><span class="hljs-built_in">cd</span> zsh-5.9<br><br><span class="hljs-comment"># 执行配置</span><br>./configure   <span class="hljs-comment"># 默认安装在：/usr/local/bin/zsh</span><br><br><span class="hljs-comment"># 编译和安装</span><br>make &amp;&amp; make install<br><br><span class="hljs-comment"># 添加信息</span><br>vim /etc/shells<br><br><span class="hljs-comment"># 在最后一行加上：</span><br>/usr/local/bin/zsh<br></code></pre></td></tr></table></figure><h2 id="6-4-验证安装"><a href="#6-4-验证安装" class="headerlink" title="6.4 验证安装"></a>6.4 验证安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 切换shell</span><br>chsh -s /usr/local/bin/zsh<br><br><span class="hljs-comment"># 查看版本信息</span><br>zsh --version<br><span class="hljs-comment"># zsh 5.9 (x86_64-pc-linux-gnu)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS Install&amp;Config Oh-My-Zsh</title>
    <link href="/2024/03/13/CentOS_Install&amp;Config_Oh-My-Zsh/"/>
    <url>/2024/03/13/CentOS_Install&amp;Config_Oh-My-Zsh/</url>
    
    <content type="html"><![CDATA[<h1 id="7-Oh-My-Zsh安装和配置"><a href="#7-Oh-My-Zsh安装和配置" class="headerlink" title="7. Oh-My-Zsh安装和配置"></a>7. Oh-My-Zsh安装和配置</h1><h2 id="7-1-安装git"><a href="#7-1-安装git" class="headerlink" title="7.1 安装git"></a>7.1 安装git</h2><p>安装Oh-My-Zsh之前需要先安装 <a href="https://git-scm.com/">git</a> 和 ( <a href="https://www.gnu.org/software/wget/">wget</a> 或 <a href="https://curl.se/">curl</a> )</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install git<br></code></pre></td></tr></table></figure><h2 id="7-2-安装Oh-My-Zsh"><a href="#7-2-安装Oh-My-Zsh" class="headerlink" title="7.2 安装Oh-My-Zsh"></a>7.2 安装Oh-My-Zsh</h2><ul><li>以下命令需要分别在普通用户和root用户下安装</li></ul><table><thead><tr><th>Method</th><th>Command</th></tr></thead><tbody><tr><td><strong>curl</strong></td><td><code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code></td></tr><tr><td><strong>wget</strong></td><td><code>sh -c &quot;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code></td></tr><tr><td><strong>fetch</strong></td><td><code>sh -c &quot;$(fetch -o - https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code></td></tr></tbody></table><h2 id="7-3-Oh-My-Zsh插件与主题配置"><a href="#7-3-Oh-My-Zsh插件与主题配置" class="headerlink" title="7.3 Oh-My-Zsh插件与主题配置"></a>7.3 Oh-My-Zsh插件与主题配置</h2><h3 id="7-3-1-zsh-autosuggestions"><a href="#7-3-1-zsh-autosuggestions" class="headerlink" title="7.3.1 zsh-autosuggestions"></a>7.3.1 <strong><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a></strong></h3><h6 id="7-3-1-1-Clone-this-repository-into-ZSH-CUSTOM-plugins-by-default-oh-my-zsh-custom-plugins"><a href="#7-3-1-1-Clone-this-repository-into-ZSH-CUSTOM-plugins-by-default-oh-my-zsh-custom-plugins" class="headerlink" title="7.3.1.1 Clone this repository into $ZSH_CUSTOM/plugins (by default ~/.oh-my-zsh/custom/plugins)"></a>7.3.1.1 Clone this repository into <code>$ZSH_CUSTOM/plugins</code> (by default <code>~/.oh-my-zsh/custom/plugins</code>)</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions<br><br><span class="hljs-comment"># 比如我的zsh</span><br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure><h6 id="7-3-1-2-Add-the-plugin-to-the-list-of-plugins-for-Oh-My-Zsh-to-load-inside-zshrc"><a href="#7-3-1-2-Add-the-plugin-to-the-list-of-plugins-for-Oh-My-Zsh-to-load-inside-zshrc" class="headerlink" title="7.3.1.2 Add the plugin to the list of plugins for Oh My Zsh to load (inside ~/.zshrc):"></a>7.3.1.2 Add the plugin to the list of plugins for Oh My Zsh to load (inside <code>~/.zshrc</code>):</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 添加插件</span><br>plugins=( <br>    <span class="hljs-comment"># other plugins...</span><br>    zsh-autosuggestions<br>)<br></code></pre></td></tr></table></figure><h6 id="7-3-1-3-Start-a-new-terminal-session"><a href="#7-3-1-3-Start-a-new-terminal-session" class="headerlink" title="7.3.1.3 Start a new terminal session."></a>7.3.1.3 Start a new terminal session.</h6><h3 id="7-3-2-zsh-syntax-highlighting"><a href="#7-3-2-zsh-syntax-highlighting" class="headerlink" title="7.3.2 zsh-syntax-highlighting"></a>7.3.2 <strong><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a></strong></h3><h6 id="7-3-2-1-Clone-this-repository-in-oh-my-zsh’s-plugins-directory"><a href="#7-3-2-1-Clone-this-repository-in-oh-my-zsh’s-plugins-directory" class="headerlink" title="7.3.2.1 Clone this repository in oh-my-zsh’s plugins directory:"></a>7.3.2.1 Clone this repository in oh-my-zsh’s plugins directory:</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting<br><br><span class="hljs-comment"># 比如我的zsh</span><br>git <span class="hljs-built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions<br></code></pre></td></tr></table></figure><h6 id="7-3-2-2-Activate-the-plugin-in-zshrc"><a href="#7-3-2-2-Activate-the-plugin-in-zshrc" class="headerlink" title="7.3.2.2 Activate the plugin in ~/.zshrc:"></a>7.3.2.2 Activate the plugin in <code>~/.zshrc</code>:</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">plugins=(<br>[plugins...]<br>zsh-autosuggestions<br>zsh-syntax-highlighting<br>)<br></code></pre></td></tr></table></figure><h6 id="7-3-2-3-Restart-zsh-such-as-by-opening-a-new-instance-of-your-terminal-emulator"><a href="#7-3-2-3-Restart-zsh-such-as-by-opening-a-new-instance-of-your-terminal-emulator" class="headerlink" title="7.3.2.3 Restart zsh (such as by opening a new instance of your terminal emulator)."></a>7.3.2.3 Restart zsh (such as by opening a new instance of your terminal emulator).</h6><h3 id="7-3-3-powerlevel10k"><a href="#7-3-3-powerlevel10k" class="headerlink" title="7.3.3 powerlevel10k"></a>7.3.3 <strong><a href="https://github.com/romkatv/powerlevel10k">powerlevel10k</a></strong></h3><h6 id="7-3-3-1-Clone-the-repository"><a href="#7-3-3-1-Clone-the-repository" class="headerlink" title="7.3.3.1 Clone the repository:"></a>7.3.3.1 Clone the repository:</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-<span class="hljs-variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k<br><br><span class="hljs-comment"># 比如我的zsh</span><br>git <span class="hljs-built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.oh-my-zsh/custom/themes/powerlevel10k<br></code></pre></td></tr></table></figure><p>Users in China can use the official mirror on gitee.com for faster download.<br>中国用户可以使用 <a href="gitee.com">gitee</a> 上的官方镜像加速下载.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> --depth=1 https://gitee.com/romkatv/powerlevel10k.git <span class="hljs-variable">$&#123;ZSH_CUSTOM:-<span class="hljs-variable">$HOME</span>/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k<br></code></pre></td></tr></table></figure><h6 id="7-3-3-2-Set-ZSH-THEME-powerlevel10k-powerlevel10k-in-zshrc"><a href="#7-3-3-2-Set-ZSH-THEME-powerlevel10k-powerlevel10k-in-zshrc" class="headerlink" title="7.3.3.2 Set ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot; in ~/.zshrc."></a>7.3.3.2 Set <code>ZSH_THEME=&quot;powerlevel10k/powerlevel10k&quot;</code> in <code>~/.zshrc</code>.</h6>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git Study</title>
    <link href="/2024/02/05/Git-Study/"/>
    <url>/2024/02/05/Git-Study/</url>
    
    <content type="html"><![CDATA[<h1 id="Git-Study"><a href="#Git-Study" class="headerlink" title="Git Study"></a>Git Study</h1><blockquote><p>参考文章：</p><p>【1】：<a href="https://www.runoob.com/git/git-basic-operations.html">Git 基本操作 | 菜鸟教程</a></p><p>【2】：<a href="https://git-scm.com/docs/git-config">https://git-scm.com/docs/git-config</a></p><p>【3】：<a href="https://git-scm.com/docs/gitignore">https://git-scm.com/docs/gitignore</a></p><p>【4】：互联网</p></blockquote><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># git 初始化本地仓库</span><br>git init<br></code></pre></td></tr></table></figure><h2 id="添加文件到暂存区"><a href="#添加文件到暂存区" class="headerlink" title="添加文件到暂存区"></a>添加文件到暂存区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 追踪文件 git add &lt;要追踪的文件&gt;，. 表示当前目录下所有文件</span><br>git add .<br></code></pre></td></tr></table></figure><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看仓库当前的状态，显示有变更的文件</span><br>git status<br><br><span class="hljs-comment"># 比较文件的不同</span><br>git diff<br></code></pre></td></tr></table></figure><h2 id="提交更改到仓库"><a href="#提交更改到仓库" class="headerlink" title="提交更改到仓库"></a>提交更改到仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 提交更改</span><br><span class="hljs-comment"># git commit -m [message]</span><br>git commit -m <span class="hljs-string">&quot;更改备注&quot;</span><br><span class="hljs-comment"># git commit 直接回车会出现一个编辑器让你输入更改备注信息，输入保存退出后即可</span><br>git commit<br><br><span class="hljs-comment"># 查看提交记录</span><br>git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 回退版本</span><br><span class="hljs-comment"># git reset [--soft | --mixed | --hard] [HEAD]</span><br>git reset <br><span class="hljs-comment"># 回退到上一个版本， ^的个数表示回到的版本数</span><br>git reset --hard HEAD^<br><span class="hljs-comment"># 可以用下面这个方法代替，1 代表回退的版本数</span><br>git reset --hard HEAD~1<br></code></pre></td></tr></table></figure><h2 id="查询历史记录"><a href="#查询历史记录" class="headerlink" title="查询历史记录"></a>查询历史记录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查询历史记录</span><br>git reflog<br></code></pre></td></tr></table></figure><h2 id="Git-配置"><a href="#Git-配置" class="headerlink" title="Git 配置"></a>Git 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置用户名和邮箱 --global 是全局配置，如果是局部配置不加 --global</span><br>git config --global user.name <span class="hljs-string">&quot;windzwindy&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;windzwindy@wind.zwindy&quot;</span><br><br><span class="hljs-comment"># 配置更改备注时用的编辑器</span><br>git config core.editor nano<br></code></pre></td></tr></table></figure><h2 id="设置不让-Git-管理的文件列表"><a href="#设置不让-Git-管理的文件列表" class="headerlink" title="设置不让 Git 管理的文件列表"></a>设置不让 Git 管理的文件列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 添加一个 .gitignore 文件</span><br><span class="hljs-built_in">cat</span> .gitignore<br><span class="hljs-comment"># 在里面写入不用 git 管理文件的名称</span><br>./myfile/*<br></code></pre></td></tr></table></figure><h2 id="让-Git-不再追踪文件"><a href="#让-Git-不再追踪文件" class="headerlink" title="让 Git 不再追踪文件"></a>让 Git 不再追踪文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 明明设置了 .gitignore 文件，为什么还可以提交？</span><br><span class="hljs-comment"># 因为 git 一开始追踪就会一直追踪</span><br><span class="hljs-comment"># git rm --cached &lt;file&gt;</span><br>git <span class="hljs-built_in">rm</span> --cached myignorefile<br></code></pre></td></tr></table></figure><h2 id="Git-分支"><a href="#Git-分支" class="headerlink" title="Git 分支"></a>Git 分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 列出分支 git branch -a</span><br>git branch -a<br><span class="hljs-comment"># 新建分支 git branch &lt;branch-name&gt;</span><br>git branch mybranch<br><span class="hljs-comment"># 切换到该分支 git checkout &lt;branch-name&gt;</span><br>git checkout mybranch<br><span class="hljs-comment"># 也可以一条命令创建并切换到新分支 new</span><br>git checkout -b new<br><br><span class="hljs-comment"># 合并到当前分支 git merge mybranch</span><br>git checkout master <span class="hljs-comment"># 切换到主分支</span><br>git merge mybranch<br><br><span class="hljs-comment"># 删除分支 git branch -d &lt;branch-name&gt;</span><br>git checkout master <span class="hljs-comment"># 先切回主分支</span><br>git branch -d mybranch<br></code></pre></td></tr></table></figure><h2 id="远程仓库管理"><a href="#远程仓库管理" class="headerlink" title="远程仓库管理"></a>远程仓库管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看当前的远程库有哪些 git remote [-v]</span><br>git remote <span class="hljs-comment"># 加 -v 可以看到远程仓库链接</span><br><br><span class="hljs-comment"># 添加远程仓库链接 git remote add [remote-reponame] [url]</span><br>git remote add origin xxx.git<br><br><span class="hljs-comment"># 推送到远程仓库 git push -u [remote-reponame] [local-branch : remote-branch]</span><br>git push -u origin master:master<br><br><span class="hljs-comment"># 删除远程分支(needrm) git push [remote-reponame] [: remote-branch]</span><br>git push -u origin :needrm<br><br><span class="hljs-comment"># 拉取远程仓库别人更改过的代码，如果有</span><br>git pull<br><br><span class="hljs-comment"># 删除远程仓库 git remote rm [remote-reponame]</span><br>git remote <span class="hljs-built_in">rm</span> origin<br></code></pre></td></tr></table></figure><h2 id="克隆分支"><a href="#克隆分支" class="headerlink" title="克隆分支"></a>克隆分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># git clone &lt;repo-url&gt;</span><br>git <span class="hljs-built_in">clone</span> xxx.git<br><br><span class="hljs-comment"># 克隆指定分支 git clone --branch [或者 -b] &lt;branchname&gt; &lt;repo-url&gt;</span><br>git <span class="hljs-built_in">clone</span> --branch master xxx.git<br>git <span class="hljs-built_in">clone</span> -b master xxx.git<br><br><span class="hljs-comment"># 克隆最后一次提交的版本</span><br>git <span class="hljs-built_in">clone</span> xxx.git --depth=1<br></code></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>上传到服务器之前先 comiit 再 push 再 pull ，否则先 pull 如果别人代码和我代码一样，会被别人的新代码覆盖了我的新代码</li><li>新的文件会覆盖老的</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL Install By Manual</title>
    <link href="/2024/01/18/MySQL-Install-By-Manual/"/>
    <url>/2024/01/18/MySQL-Install-By-Manual/</url>
    
    <content type="html"><![CDATA[<h2 id="1、Install-MySQL-Server-（安装-MySQL-服务）"><a href="#1、Install-MySQL-Server-（安装-MySQL-服务）" class="headerlink" title="1、Install MySQL Server （安装 MySQL 服务）"></a>1、Install MySQL Server （安装 MySQL 服务）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd C:/mysql5.7/<br>mysqld -install<br></code></pre></td></tr></table></figure><h2 id="2、Edit-“my-ini”（编辑安装配置文件）"><a href="#2、Edit-“my-ini”（编辑安装配置文件）" class="headerlink" title="2、Edit “my.ini”（编辑安装配置文件）"></a>2、Edit “my.ini”（编辑安装配置文件）</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[mysqld]</span><br><span class="hljs-attr">basedir</span>=C:/mysql5.<span class="hljs-number">7</span><span class="hljs-comment"># your MySQL folder</span><br><span class="hljs-attr">datadir</span>=C:/mysql5.<span class="hljs-number">7</span>/data<br><span class="hljs-attr">character-set-server</span>=utf8<br><span class="hljs-attr">port</span>=<span class="hljs-number">3306</span><br><span class="hljs-section">[mysql]</span><br><span class="hljs-attr">default-character-set</span>=utf8<br></code></pre></td></tr></table></figure><h2 id="3、Initialize-MySQL-with-no-root-password（没有-root-密码的安装）"><a href="#3、Initialize-MySQL-with-no-root-password（没有-root-密码的安装）" class="headerlink" title="3、Initialize MySQL with no root password（没有 root 密码的安装）"></a>3、Initialize MySQL with no root password（没有 root 密码的安装）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&quot;-insecure&quot;</span> parameter : no root password</span><br>mysqld --initialize-insecure<br></code></pre></td></tr></table></figure><h2 id="4、Start-Stop-MySQL-Service（开启-MySQL-服务）"><a href="#4、Start-Stop-MySQL-Service（开启-MySQL-服务）" class="headerlink" title="4、Start &amp; Stop MySQL Service（开启 MySQL 服务）"></a>4、Start &amp; Stop MySQL Service（开启 MySQL 服务）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">start MySQL service</span><br>net start MySQL<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">stop MySQL service</span><br>net stop MySQL<br></code></pre></td></tr></table></figure><h2 id="5、MySQL-Login-Set-root-user-password（登录和修改-root-用户密码）"><a href="#5、MySQL-Login-Set-root-user-password（登录和修改-root-用户密码）" class="headerlink" title="5、MySQL Login &amp; Set root user password（登录和修改 root 用户密码）"></a>5、MySQL Login &amp; Set root user password（登录和修改 root 用户密码）</h2><h3 id="use-root-user-to-login（登录到-root-用户）"><a href="#use-root-user-to-login（登录到-root-用户）" class="headerlink" title="use root user to login（登录到 root 用户）"></a>use root user to login（登录到 root 用户）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">use root user to login</span><br>mysql -u root# &quot;-u&quot; is user<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">use host and port, <span class="hljs-keyword">for</span> exzample</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-string">&quot;-h&quot;</span> host <span class="hljs-string">&quot;-P&quot;</span> port</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">有时候可能要管理的是远程的数据库，所以可以加个 -h 来指定要管理的数据库的服务器 ip 地址</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">前提是允许远程访问</span><br>mysql -h 127.0.0.1 -P 3306<br></code></pre></td></tr></table></figure><h3 id="set-root-user-password（设置-root-用户密码）"><a href="#set-root-user-password（设置-root-用户密码）" class="headerlink" title="set root user password（设置 root 用户密码）"></a>set root user password（设置 root 用户密码）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mysql"># set root user password<br>ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;123456&#x27;;<br></code></pre></td></tr></table></figure><h3 id="use-root-user-and-password-to-login-again（用密码登录-root-用户）"><a href="#use-root-user-and-password-to-login-again（用密码登录-root-用户）" class="headerlink" title="use root user and password to login again（用密码登录 root 用户）"></a>use root user and password to login again（用密码登录 root 用户）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">use root user and password to login again</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">-u 后面跟用户 -p 后面跟密码</span><br>mysql -u root -p 123456<br></code></pre></td></tr></table></figure><h3 id="if-you-want-to-remove-root-user-password-then-（删除-root-用户密码，此步骤可选）"><a href="#if-you-want-to-remove-root-user-password-then-（删除-root-用户密码，此步骤可选）" class="headerlink" title="if you want to remove root user password, then （删除 root 用户密码，此步骤可选）"></a>if you want to remove root user password, then （删除 root 用户密码，此步骤可选）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mysql">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;&#x27;;<br></code></pre></td></tr></table></figure><h3 id="if-you-want-to-exit-MySQL（退出-MySQL）"><a href="#if-you-want-to-exit-MySQL（退出-MySQL）" class="headerlink" title="if you want to exit MySQL（退出 MySQL）"></a>if you want to exit MySQL（退出 MySQL）</h3><p><strong>&#x3D;&#x3D;you can use<code>quit</code>or<code>exit</code>&#x3D;&#x3D;</strong></p><h2 id="6、Set-the-environment-variables（设置环境变量用于方便登录-MySQL）"><a href="#6、Set-the-environment-variables（设置环境变量用于方便登录-MySQL）" class="headerlink" title="6、Set the environment variables（设置环境变量用于方便登录 MySQL）"></a>6、Set the environment variables（设置环境变量用于方便登录 MySQL）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">setx PATH &quot;%PATH%;D:\mysql5.7\bin&quot;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 更新失败的解决方法</title>
    <link href="/2024/01/18/Windows-Update-Failed-Resolve/"/>
    <url>/2024/01/18/Windows-Update-Failed-Resolve/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考文章：</p><p>互联网</p></blockquote><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在命令提示符(管理员)下键入以下命令：</p><p><code>sfc /SCANNOW </code> 及 <code>Dism /Online /Cleanup-Image /ScanHealth</code></p><p>这条命令将扫描全部系统文件并和官方系统文件对比，扫描计算机中的不一致情况。</p><p><code>Dism /Online /Cleanup-Image /CheckHealth</code></p><p>这条命令必须在前一条命令执行完以后，发现系统文件有损坏时使用。</p><p><code>DISM /Online /Cleanup-image /RestoreHealth</code></p><p>这条命令是把那些不同的系统文件还原成官方系统源文件。</p><p>完成后重启，再键入以下命令：<code>sfc /SCANNOW</code>，检查系统文件是否被修复。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArchLinux WSL Install</title>
    <link href="/2024/01/18/ArchLinux-WSL-Install/"/>
    <url>/2024/01/18/ArchLinux-WSL-Install/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考文章：</p><p>【1】：<a href="https://zhuanlan.zhihu.com/p/613738433">WSL2 安装 ArchLinux —— In The Arch Way</a></p><p>【2】：<a href="https://cloud.tencent.com/developer/article/1888631">windows系统wsl&#x2F;wsl2 更换虚拟硬盘位置(导出,导入)</a></p><p>【3】：<a href="https://bbs.zsxwz.com/thread-5159.htm">WSL 2安装 archlinux</a></p><p>【4】：<a href="https://blog.csdn.net/pl23k/article/details/131336220">WSL2中安装Cuda遇到的问题</a></p></blockquote><h2 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h2><ol><li>windows 10</li><li>默认 WSL 版本为 2 <code>wsl --set-default-version 2</code></li><li>查看版本： <code>wsl --version</code></li><li>已通过 <code>wsl --install</code> 安装过一个其他的 WSL2 发行版，或者有其他 Linux 机器。用于生成 rootfs 文件</li><li>如果觉得此教程很难，建议你使用 ArchWSL 项目： <a href="https://github.com/yuk7/ArchWSL">https://github.com/yuk7/ArchWSL</a></li></ol><h3 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h3><p>安装 wsl2 ，<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">wsl2 内核</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启用 WSL 功能</span><br>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart<br><span class="hljs-comment"># 启用虚拟平台</span><br>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart<br><span class="hljs-comment"># wsl2</span><br>wsl --set-default-version 2<br><br><span class="hljs-comment"># 或者打开 appwiz.cpl 启用 WSL 虚拟机平台 Hyper-V 等功能</span><br></code></pre></td></tr></table></figure><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><h3 id="方法一：打包-rootfs"><a href="#方法一：打包-rootfs" class="headerlink" title="方法一：打包 rootfs"></a>方法一：打包 rootfs</h3><p>去 ArchLinux 的镜像仓储上下载 <code>archlinux-bootstrap-x86_64.tar.gz</code></p><p>在已有的 WSL2 发行版中，执行下述命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 从阿里云镜像站上下载 bootstrap-x86_64.tar.gz</span><br>wget https://mirrors.aliyun.com/archlinux/iso/2024.01.01/archlinux-bootstrap-x86_64.tar.gz<br><span class="hljs-comment"># 使用 bsdtar 解压 bootstrap-x86_64.tar.gz 压缩文件</span><br><span class="hljs-comment"># 使用 bsdtar 而非 tar 是因为 GNU tar 不会保留拓展属性（extended attributes）</span><br><span class="hljs-comment"># https://wiki.archlinux.org/title/Full_system_backup_with_tar</span><br><span class="hljs-comment"># x 是解压 p 是保留原文件权限 f 是解压文件的名字，可以加个 v 详细解压信息</span><br>sudo bsdtar -xpf archlinux-bootstrap-x86_64.tar.gz<br><br><span class="hljs-comment"># 重新打包为 archlinux-bootstrap.tar 文件 </span><br><span class="hljs-comment"># -C &lt;目的目录&gt; 或 --directory =&lt;目的目录&gt; 意为切换到指定的目录。</span><br><span class="hljs-comment"># -C patha pathb 把目录 patha 改到 pathb 下</span><br><span class="hljs-comment"># 打包后压缩包里的 patha/test.txt 变成 pathb/test.txt</span><br><span class="hljs-comment"># 如果 pathb 是 . 那么等于打包在当前目录下，妙！</span><br>sudo bsdtar -cpf archlinux-bootstrap.tar -C root.x86_64 .<br><span class="hljs-comment"># 或者使用以下命令</span><br><span class="hljs-built_in">cd</span> root.x86_64<br>sudo bsdtar -cpf ~/archlinux-bootstrap.tar ./*<br><br><span class="hljs-comment"># 移动 archlinux-bootstrap.tar 到 D 盘</span><br><span class="hljs-built_in">mv</span> ~/archlinux-bootstrap.tar /mnt/d<br></code></pre></td></tr></table></figure><p>在 Windows 中导入 archlinux-bootstrap.tar 为 Arch WSL2 发行版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 用法 wsl --import [任意名字] [存放系统的位置] [系统文件]</span><br>wsl --import Arch C:\Arch D:\archlinux-bootstrap.tar<br></code></pre></td></tr></table></figure><h3 id="方法二：LxRunOffline"><a href="#方法二：LxRunOffline" class="headerlink" title="方法二：LxRunOffline"></a>方法二：<a href="https://github.com/DDoSolitary/LxRunOffline">LxRunOffline</a></h3><ol><li><p>下载安装 <a href="https://github.com/DDoSolitary/LxRunOffline">LxRunOffline</a>，把 LxRunOffline 添加到环境变量</p></li><li><p>下载 archlinux-bootstrap-x86_64.tar.gz</p></li><li><p>安装 ArchLinux</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装，-r 是 指定 root.x86_64 (压缩包目录)</span><br>LxRunOffline i -n &lt;自定义名称&gt; -f &lt;镜像位置&gt; -d &lt;安装系统的位置&gt; -r root.x86_64<br><span class="hljs-comment"># 比如安装到 d 盘 wsl 文件夹，安装完之后，会在安装目录生产.vhdx系统文件</span><br>LxRunOffline i -n Arch -f D:\archlinux-bootstrap-x86_64.tar.gz -d D:\wsl -r root.x86_64<br><span class="hljs-comment"># 转换版本</span><br>wsl --set-version &lt;名称&gt; 2<br></code></pre></td></tr></table></figure></li></ol><p>至此你已经有了一个可用的 Arch WSL 发行版，但是就和安装 Arch 一样，你还是需要进行一些初始配置。</p><h2 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h2><h3 id="进入系统"><a href="#进入系统" class="headerlink" title="进入系统"></a>进入系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># wsl -d &lt;系统名称&gt; [-u &lt;用户名&gt;]</span><br>wsl -d Arch -u root<br></code></pre></td></tr></table></figure><h3 id="配置-locale"><a href="#配置-locale" class="headerlink" title="配置 locale"></a>配置 locale</h3><p>设置 en_US.UTF-8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i -e <span class="hljs-string">&quot;s/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/&quot;</span> /etc/locale.gen<br>locale-gen<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;LANG=en_US.UTF-8&#x27;</span> &gt; /etc/locale.conf<br><span class="hljs-comment"># 查看是否配置成功</span><br>locale<br></code></pre></td></tr></table></figure><h3 id="配置-pacman"><a href="#配置-pacman" class="headerlink" title="配置 pacman"></a>配置 pacman</h3><p>系统没有 vi vim neovim nano emacs 任何编辑器，所以用以下方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置镜像</span><br><span class="hljs-comment"># 先备份一个 镜像源</span><br><span class="hljs-built_in">cp</span> -a /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak<br><span class="hljs-comment"># 用 grep + 正则表达式 过滤中国的源并写到镜像源文件上，33 可以换成 10</span><br><span class="hljs-built_in">cat</span> /etc/pacman.d/mirrorlist.bak | grep -A 33 -E <span class="hljs-string">&#x27;^## China$&#x27;</span> | sed <span class="hljs-string">&#x27;s/#Server/Server/g&#x27;</span> | <span class="hljs-built_in">cat</span> &gt; /etc/pacman.d/mirrorlist<br><span class="hljs-comment"># 否则选择一个你熟悉的，比如说阿里云</span><br><span class="hljs-built_in">cat</span> /etc/pacman.d/mirrorlist.bak | grep -e <span class="hljs-string">&#x27;aliyun&#x27;</span> | sed <span class="hljs-string">&#x27;s/#Server/Server/g&#x27;</span> | <span class="hljs-built_in">cat</span> &gt; /etc/pacman.d/mirrorlist<br><br><span class="hljs-comment"># 初始化 keyring，这是关键安全配置</span><br><span class="hljs-comment"># https://wiki.archlinux.org/title/Pacman/Package_signing</span><br>pacman-key --init<br>pacman-key --populate archlinux<br><span class="hljs-comment"># 安装 keyring</span><br>pacman -Sy archlinux-keyring<br><span class="hljs-comment"># 更新仓库和系统</span><br>pacman -Syyu<br></code></pre></td></tr></table></figure><h3 id="安装必备软件"><a href="#安装必备软件" class="headerlink" title="安装必备软件"></a>安装必备软件</h3><p>看自己需求，安装必备软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S base base-devel wget vim vi man neovim git zsh bash-completion net-tools<br></code></pre></td></tr></table></figure><h3 id="配置用户"><a href="#配置用户" class="headerlink" title="配置用户"></a>配置用户</h3><p>创建一个用户 “wind” ，并允许其使用 sudo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置 sudo</span><br><span class="hljs-comment"># 配置编辑器为 vim</span><br>EDITOR=vim<br>visudo<br><span class="hljs-comment"># 意思是让 wheel 组的成员可以 sudo，当然可以去掉 %sudo...</span><br><span class="hljs-comment"># 把 %wheel ALL=(ALL:ALL) ALL 前的注释去掉，如果没有就添加</span><br><br><span class="hljs-comment"># 新增用户并加入 wheel 用户组</span><br><span class="hljs-comment"># useradd [用户名] [-m 创建家目录] [-G 指定组] [-s 指定 shell 默认是 bash]</span><br>useradd wind -m -G wheel -s /bin/bash<br><br><span class="hljs-comment"># 设置 wind 用户的密码</span><br>passwd wind<br><span class="hljs-comment"># 设置 root 用户的密码</span><br>passwd<br></code></pre></td></tr></table></figure><p>如果你用 <a href="https://wiki.archlinux.org/title/Doas">doas - dedicated opnebsd application subexecutor</a> 自行<a href="https://man.openbsd.org/doas.conf.5">配置</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 doas</span><br>pacman -S opendoas<br><span class="hljs-comment"># 编辑 doas 配置文件</span><br>vim /etc/doas.conf<br><span class="hljs-comment"># 添加以下内容</span><br>permit :wheel<br></code></pre></td></tr></table></figure><h3 id="配置-wsl-conf"><a href="#配置-wsl-conf" class="headerlink" title="配置 wsl.conf"></a>配置 <code>wsl.conf</code></h3><ul><li>参照官方文档 <a href="https://learn.microsoft.com/en-us/windows/wsl/wsl-config">wsl config</a></li></ul><p><code>vim /etc/wsl.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs conf">[automount]<br>enabled = false<br>root = /mnt<br>options = &quot;metadata&quot;<br>mountFsTab = false<br>ldconfig = false<br><br>[network]<br>hostname = wind<br>generateHosts = false<br>generateResolvConf = true<br><br>[interop]<br>enabled = false<br>appendWindowsPath = false<br><br>[user]<br>default = wind<br><br>[boot]<br>systemd = true<br></code></pre></td></tr></table></figure><h3 id="配置-AUR"><a href="#配置-AUR" class="headerlink" title="配置 AUR"></a>配置 <a href="https://aur.archlinux.org/">AUR</a></h3><ul><li>参考 <a href="https://www.archlinuxcn.org/archlinux-cn-repo-and-mirror/">Arch Linux 中文社区仓库</a></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 编辑 /etc/pacman.conf 文件添加仓库地址</span><br><span class="hljs-comment"># 用 vi vim neovim nano emacs 等都可以，我这里用 echo</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;[archlinuxcn]&#x27;</span> &gt;&gt; /etc/pacman.conf<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;Server = https://repo.archlinuxcn.org/$arch&#x27;</span> &gt;&gt; /etc/pacman.conf<br></code></pre></td></tr></table></figure><p>本地信任 key，参见<a href="https://www.archlinuxcn.org/archlinuxcn-keyring-manually-trust-farseerfc-key/">新系统中安装 archlinuxcn-keyring 包前需要手动信任 farseerfc 的 key</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注册签名</span><br>sudo pacman-key --lsign-key <span class="hljs-string">&quot;farseerfc@archlinux.org&quot;</span><br><span class="hljs-comment"># 更新仓库和系统</span><br>sudo pacman -Syyu<br><span class="hljs-comment"># 安装 keyring</span><br>sudo pacman -S archlinuxcn-keyring<br></code></pre></td></tr></table></figure><p>安装 AUR helper，这里用 <a href="https://github.com/Morganamilo/paru">paru</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://aur.archlinux.org/paru.git --depth=1<br><span class="hljs-built_in">cd</span> paru<br>makepkg -si<br></code></pre></td></tr></table></figure><h3 id="导出镜像"><a href="#导出镜像" class="headerlink" title="导出镜像"></a>导出镜像</h3><p>配置完成后，记得将 WSL 实例导出，免去重复配置的烦恼。在windows下运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 关机</span><br>wsl --shutdown<br><span class="hljs-comment"># 导出</span><br><span class="hljs-comment"># 用法 wsl --export [发行版名称] [导出文件到本地位置]</span><br>wsl --<span class="hljs-built_in">export</span> Arch Arch.tar<br><span class="hljs-comment"># 导入</span><br><span class="hljs-comment"># 用法 wsl --import [任意名字] [存放系统的位置] [系统文件]</span><br>wsl --import Arch C:\Arch Arch.tar<br></code></pre></td></tr></table></figure><h2 id="WSL-用法"><a href="#WSL-用法" class="headerlink" title="WSL 用法"></a>WSL 用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看 wsl 信息</span><br>wsl -l -v<br><span class="hljs-comment"># 查看 wsl 内核等状态</span><br>wsl -v<br><span class="hljs-comment"># 更新 wsl</span><br>wsl --update [--web-download]<br><span class="hljs-comment"># 删除虚拟机</span><br>wsl --unregister Ubuntu<br><span class="hljs-comment"># 导出</span><br><span class="hljs-comment"># 用法 wsl --export [发行版名称] [导出文件到本地位置]</span><br>wsl --<span class="hljs-built_in">export</span> Arch Arch.tar<br><span class="hljs-comment"># 导入</span><br><span class="hljs-comment"># 用法 wsl --import [任意名字] [存放系统的位置] [系统文件]</span><br>wsl --import Arch C:\Arch Arch.tar<br><span class="hljs-comment"># 设置 wsl 版本</span><br>wsl --set-version Arch 2<br><span class="hljs-comment"># 设置 wsl 默认版本</span><br>wsl --set-default-version 2<br><span class="hljs-comment"># 关机</span><br>wsl --shutdown<br><span class="hljs-comment"># 登录到 wsl</span><br><span class="hljs-comment"># 用法 wsl [-d 发行版本] [-u 指定登录用户]</span><br>wsl -d Arch -u root<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ArchLinux</tag>
      
      <tag>WSL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH Install &amp; Login</title>
    <link href="/2024/01/18/SSH-Install-Login/"/>
    <url>/2024/01/18/SSH-Install-Login/</url>
    
    <content type="html"><![CDATA[<h1 id="使用-SSH-免密登录远程主机并禁用密码登录"><a href="#使用-SSH-免密登录远程主机并禁用密码登录" class="headerlink" title="使用 SSH 免密登录远程主机并禁用密码登录"></a>使用 SSH 免密登录远程主机并禁用密码登录</h1><blockquote><p>参考文章：</p><p>【1】：<a href="https://cloud.tencent.com/developer/article/1335758">【SSH】使用 SSH 登录远程主机，并禁用密码登录</a></p><p>【2】：<a href="https://blog.csdn.net/li528405176/article/details/82810342">SSH 简介及两种远程登录的方法_ssh</a></p></blockquote><p>方案如下：</p><ul><li>普通用户：密码 + 密钥</li><li>root 用户：密码</li></ul><p>因为禁用 SSH 密码登录后如果出了问题，还可以用 SVN 普通密码登录，而 root 用户没有密钥是为了防止密钥泄露后攻击者远程直接登录到 root 用户</p><h2 id="总流程"><a href="#总流程" class="headerlink" title="总流程"></a>总流程</h2><ol><li>远程服务器安装 openssh 并启动服务</li><li>本地生成 &#x3D;&#x3D;公钥&#x3D;&#x3D; 和 &#x3D;&#x3D;私钥&#x3D;&#x3D;</li><li>复制公钥到服务器</li><li>配置服务器的 <code>sshd_config</code> 指明公钥位置和禁用密码登录</li><li>本地连接服务器</li></ol><h2 id="远程主机配置-ssh"><a href="#远程主机配置-ssh" class="headerlink" title="远程主机配置 ssh"></a>远程主机配置 ssh</h2><h3 id="先使用密码登录到远程主机"><a href="#先使用密码登录到远程主机" class="headerlink" title="先使用密码登录到远程主机"></a>先使用密码登录到远程主机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 输入密码后进入远程主机系统</span><br>ssh &#123;登录用户&#125;@&#123;ip地址&#125;<br></code></pre></td></tr></table></figure><h3 id="在远程主机安装-openssh-服务并启动"><a href="#在远程主机安装-openssh-服务并启动" class="headerlink" title="在远程主机安装 openssh 服务并启动"></a>在远程主机安装 openssh 服务并启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 openssh</span><br>sudo pacman -Sy openssh<br><span class="hljs-comment"># 开机启动 ssh</span><br>sudo systemctl <span class="hljs-built_in">enable</span> sshd<br><span class="hljs-comment"># 启动 ssh</span><br>sudo systemctl start sshd<br></code></pre></td></tr></table></figure><h2 id="本地生成-SSH-秘钥并复制到服务器"><a href="#本地生成-SSH-秘钥并复制到服务器" class="headerlink" title="本地生成 SSH 秘钥并复制到服务器"></a>本地生成 SSH 秘钥并复制到服务器</h2><h3 id="生成本机系统的-ssh-公钥"><a href="#生成本机系统的-ssh-公钥" class="headerlink" title="生成本机系统的 ssh 公钥"></a>生成本机系统的 ssh 公钥</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># -t表示类型选项，这里采用rsa加密算法，会提示，直接回车就行</span><br>ssh-keygen -t rsa<br></code></pre></td></tr></table></figure><p>然后根据提示一步步的按 enter 键即可（其中有一个提示是要求设置私钥口令 passphrase ，不设置则为空，这里看心情吧，如果不放心私钥的安全可以设置一下），执行结束以后会在下面的路径有两个文件：</p><ul><li><p>Linux 默认保存路径为 <code>~/.ssh/</code></p></li><li><p>Windows 对应为 <code>C:\Users\Administrator\.ssh\</code> （Administrator 是你的用户名）</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/.ssh/id_rsa.pub <span class="hljs-comment"># 公钥路径（存在服务器）</span><br>~/.ssh/id_rsa <span class="hljs-comment"># 私钥路径（存在本地用于连接服务器）</span><br></code></pre></td></tr></table></figure><h3 id="复制公钥"><a href="#复制公钥" class="headerlink" title="复制公钥"></a>复制公钥</h3><p>使用 <code>ssh-copy-id</code> 命令将公钥复制到远程主机。</p><p><code>ssh-copy-id</code> 会将公钥写到远程主机的 <code>~/.ssh/authorized_keys</code> 文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-copy-id &#123;登录用户&#125;@&#123;ip地址&#125;<br></code></pre></td></tr></table></figure><ul><li>以上步骤执行完后应该在服务器的 <code>~/.ssh</code> 目录下有一个 <code>authorized_keys</code> 文件，没有也没得关系</li><li>主要是 <code>id_rsa_pub</code> 复制到了服务器上就行</li><li>当然也可以用 <code>sftp</code> 工具复制上去</li></ul><h2 id="配置远程服务器-openssh"><a href="#配置远程服务器-openssh" class="headerlink" title="配置远程服务器 openssh"></a>配置远程服务器 openssh</h2><h3 id="查看远程主机的-ssh-配置"><a href="#查看远程主机的-ssh-配置" class="headerlink" title="查看远程主机的 ssh 配置"></a>查看远程主机的 ssh 配置</h3><p>配置文件目录 <code>/etc/ssh/</code> 下的 <code>sshd_config</code></p><p>对其进行以下参数进行设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 默认的认证公钥文件</span><br><span class="hljs-comment"># 其中 .ssh/authorized_keys 是你刚才复制到服务器上的公钥的位置</span><br><span class="hljs-comment"># 前面没加 / 表示从 ~ 目录开始 ？</span><br><span class="hljs-comment"># 所以最好把复制上去的公钥重命名为 authorized_keys 并放到 ~/.ssh 下</span><br>AuthorizedKeysFile .ssh/authorized_keys<br><br><span class="hljs-comment"># 禁用密码登录</span><br>PasswordAuthentication no<br></code></pre></td></tr></table></figure><h3 id="设置文件和目录权限"><a href="#设置文件和目录权限" class="headerlink" title="设置文件和目录权限"></a>设置文件和目录权限</h3><h4 id="（1）设置-ssh目录权限"><a href="#（1）设置-ssh目录权限" class="headerlink" title="（1）设置.ssh目录权限"></a>（1）设置<code>.ssh</code>目录权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 文件拥有者拥有读、写、执行权限,其他组无权限</span><br><span class="hljs-built_in">chmod</span> 700 ~/.ssh/<br></code></pre></td></tr></table></figure><h4 id="（2）设置authorized-keys文件权限"><a href="#（2）设置authorized-keys文件权限" class="headerlink" title="（2）设置authorized_keys文件权限"></a>（2）设置<code>authorized_keys</code>文件权限</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 文件拥有者拥有读、写权限，同群组和其他群组成员拥有读权限</span><br><span class="hljs-built_in">chmod</span> 644 ~/.ssh/authorized_keys<br></code></pre></td></tr></table></figure><h4 id="（3）重启-sshd-服务"><a href="#（3）重启-sshd-服务" class="headerlink" title="（3）重启 sshd 服务"></a>（3）重启 sshd 服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 重启 sshd 服务</span><br>sudo systemctl restart sshd<br></code></pre></td></tr></table></figure><h2 id="进行-ssh-方式登录远程主机"><a href="#进行-ssh-方式登录远程主机" class="headerlink" title="进行 ssh 方式登录远程主机"></a>进行 ssh 方式登录远程主机</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ./id_rsa 是你的私钥位置，用于登录</span><br>ssh -i ./id_rsa &#123;登录用户&#125;@&#123;ip地址&#125;<br></code></pre></td></tr></table></figure><ul><li><p>如果出现错误</p></li><li><p>删除本地主机的 .ssh 目录下的 known_hosts 再进行登录</p></li><li><p>再不行就上网找找解决方法</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Server</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ArchLinux Install Manual</title>
    <link href="/2024/01/18/Arch-Install/"/>
    <url>/2024/01/18/Arch-Install/</url>
    
    <content type="html"><![CDATA[<h1 id="ArchLinux-安装教程"><a href="#ArchLinux-安装教程" class="headerlink" title="ArchLinux 安装教程"></a>ArchLinux 安装教程</h1><blockquote><p>参考文章：</p><p>官方文档 ArchWiki</p></blockquote><blockquote><p>用 <a href="https://rufus.ie/zh/">Rufus</a> , <a href="https://www.ultraiso.com/">UltraISO</a> , <a href="https://www.ventoy.net/cn/index.html">Ventoy</a> 等工具进行 U盘 启动制作</p><p>制作后开机进入启动盘选第一项</p></blockquote><h2 id="第一阶段：准备"><a href="#第一阶段：准备" class="headerlink" title="第一阶段：准备"></a>第一阶段：准备</h2><h3 id="1-开机后设置字体大小"><a href="#1-开机后设置字体大小" class="headerlink" title="1. 开机后设置字体大小"></a>1. 开机后设置字体大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setfont /usr/share/kbd/consolefonts/LatGrkCyr-12x22.psfu.gz<br></code></pre></td></tr></table></figure><h3 id="2-连接网络"><a href="#2-连接网络" class="headerlink" title="2. 连接网络"></a>2. 连接网络</h3><h4 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip <span class="hljs-built_in">link</span><span class="hljs-comment"># 查看网卡</span><br>rfkill unblock wifi<span class="hljs-comment"># 取消禁用wifi设备（可选）</span><br>ip <span class="hljs-built_in">link</span> <span class="hljs-built_in">set</span> wlan0 up<span class="hljs-comment"># 启动网卡</span><br>iwlist wlan0 scan<span class="hljs-comment">#扫描wlan（也可以用wifi-menu）</span><br><span class="hljs-comment"># 很多结果可以用以下的管道命令</span><br>iwlist wlan0 scan | grep ESSID<br><br><span class="hljs-comment">#连接</span><br>wpa_passphrase 网络 密码 &gt; 文件名<br><span class="hljs-comment"># wpa_passphrase Wifi password &gt; internet.conf</span><br><br><span class="hljs-comment"># 连接格式，&#x27;&amp;&#x27;表示后台运行</span><br>wpa_supplicant -i interface -c configuration.conf &amp;<br><span class="hljs-comment"># wpa_supplicant -i Wifi -c internet.conf &amp;</span><br><br><span class="hljs-comment"># 此时还没有网络ping baidu.com没反应，还要动态分配ip地址</span><br><span class="hljs-comment"># Dynamic Host Configuration Protocol</span><br>dhcpcd &amp;<br><br><span class="hljs-comment"># 检查是否连接成功</span><br>ping baidu.com<br></code></pre></td></tr></table></figure><h4 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 输入iwctl进入交互式提示符（interactive prompt），配置并连接到互联网。</span><br>iwctl<br>station wlan0 scan<br>station wlan0 get-networks<br>station wlan0 connect &lt;network name&gt;<br>station wlan0 show<br>quit<span class="hljs-comment"># 回到命令行</span><br></code></pre></td></tr></table></figure><h3 id="3-更新系统时间"><a href="#3-更新系统时间" class="headerlink" title="3. 更新系统时间"></a>3. 更新系统时间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">timedatectl list-timezones | egrep -o <span class="hljs-string">&quot;Asia/B.*&quot;</span><br>timedatectl set-timezone <span class="hljs-string">&quot;Asia/Shanghai&quot;</span><br>timedatectl set-ntp <span class="hljs-literal">true</span><span class="hljs-comment"># ntp缩写（Network Time Protocol）</span><br></code></pre></td></tr></table></figure><h2 id="第二阶段：安装"><a href="#第二阶段：安装" class="headerlink" title="第二阶段：安装"></a>第二阶段：安装</h2><blockquote><p>引导和硬盘格式有且不仅限几种流行方式（描述不清请见谅……）</p><p>BIOS + MBR （以前电脑常见）</p><p>BIOS + GPT （少见）</p><p>UEFI + MBR （少见）</p><p>UEFI + GPT （现在电脑常见）</p><p>我这里采用 UEFI + GPT</p><p>如果你的电脑不支持 UEFI 可以选用 BIOS + MBR 或者 BIOS + GPT</p></blockquote><h3 id="1-对硬盘分区以及格式化"><a href="#1-对硬盘分区以及格式化" class="headerlink" title="1. 对硬盘分区以及格式化"></a>1. 对硬盘分区以及格式化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看要安装 ArchLinux 系统的硬盘代号，一般是 /dev/xxx</span><br>fdisk -l<br><br><span class="hljs-comment"># s 参数是 script 的意思，/dev/xxx 是要安装系统的硬盘代号</span><br>parted -s /dev/xxx mklabel gpt<br><span class="hljs-comment"># 如果是 MBR 则用下面的命令</span><br>parted -s /dev/xxx mklabel msdos<br><br><span class="hljs-comment"># 开始分区操作</span><br>fdisk /dev/xxx<br></code></pre></td></tr></table></figure><h4 id="分区操作"><a href="#分区操作" class="headerlink" title="分区操作"></a>分区操作</h4><h5 id="布局参考"><a href="#布局参考" class="headerlink" title="布局参考"></a>布局参考</h5><h6 id="UEFI-with-GPT-（其实只要一个主分区和一个-EFI-分区就够了……）"><a href="#UEFI-with-GPT-（其实只要一个主分区和一个-EFI-分区就够了……）" class="headerlink" title="UEFI with GPT &#x3D;&#x3D;（其实只要一个主分区和一个 EFI 分区就够了……）&#x3D;&#x3D;"></a>UEFI with GPT &#x3D;&#x3D;（其实只要一个主分区和一个 EFI 分区就够了……）&#x3D;&#x3D;</h6><table><thead><tr><th align="center">Mount point</th><th align="center">Partition</th><th align="center">Partition type</th><th align="center">Suggested size</th></tr></thead><tbody><tr><td align="center">&#x2F;mnt&#x2F;boot or &#x2F;mnt&#x2F;efi</td><td align="center">&#x2F;dev&#x2F;efi_system_partition</td><td align="center">EFI system partition</td><td align="center">At least 300 MiB</td></tr><tr><td align="center">[SWAP]</td><td align="center">&#x2F;dev&#x2F;swap_partition</td><td align="center">Linux swap</td><td align="center">More than 512MiB</td></tr><tr><td align="center">&#x2F;mnt</td><td align="center">&#x2F;dev&#x2F;root_partition</td><td align="center">Linux x86-64 root (&#x2F;)</td><td align="center">Remainder of the device</td></tr></tbody></table><h6 id="BIOS-with-MBR-（其实只要一个主分区就够了……）"><a href="#BIOS-with-MBR-（其实只要一个主分区就够了……）" class="headerlink" title="BIOS with MBR &#x3D;&#x3D;（其实只要一个主分区就够了……）&#x3D;&#x3D;"></a>BIOS with MBR &#x3D;&#x3D;（其实只要一个主分区就够了……）&#x3D;&#x3D;</h6><table><thead><tr><th align="center">Mount point</th><th align="center">Partition</th><th align="center">Partition type</th><th align="center">Suggested size</th></tr></thead><tbody><tr><td align="center">[SWAP]</td><td align="center">&#x2F;dev&#x2F;swap_partition</td><td align="center">Linux swap</td><td align="center">More than 512MiB</td></tr><tr><td align="center">&#x2F;mnt</td><td align="center">&#x2F;dev&#x2F;root_partition</td><td align="center">Linux</td><td align="center">Remainder of the device</td></tr></tbody></table><ul><li>我这里创建两个分区（EFI分区 和 主分区）</li></ul><h5 id="创建第一个分区"><a href="#创建第一个分区" class="headerlink" title="创建第一个分区"></a>创建第一个分区</h5><p><code>我想创建一个编号为1，容量为 1GiB 的EFI分区，即 BOOT/EFI 分区，大小看着给</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): m                   <span class="hljs-comment"># 按&#x27;m&#x27;看帮助</span><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): n                   <span class="hljs-comment"># 按&#x27;n&#x27;新建分区</span><br>Partiton number (1-128, default 1):       <span class="hljs-comment"># 分区编号（默认是1），按回车</span><br>First sector (xx-xxxx, default xx):       <span class="hljs-comment"># 开始扇区（默认是xx），按回车</span><br><br><span class="hljs-comment"># 结束扇区（默认是xxxx），你可心加或减，</span><br><span class="hljs-comment"># 所以输入 ‘+1G’ 然后按回车</span><br><br>Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (xx-xxxx, default xxxx): +1G<br><br>Created a new partiton 1 of <span class="hljs-built_in">type</span> <span class="hljs-string">&#x27;Linux filesystem&#x27;</span> and of size 1 GiB.<br>Partition <span class="hljs-comment">#1 contains a vfat signature.</span><br><br>Do you want to remove the signature? [Y]es/[N]o: Y<br><br>The signature will be removed by a write <span class="hljs-built_in">command</span>.<br></code></pre></td></tr></table></figure><h5 id="创建第二个分区"><a href="#创建第二个分区" class="headerlink" title="创建第二个分区"></a>创建第二个分区</h5><p><code>我想创建一个编号为2，容量为全部的主分区</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): n                                 <span class="hljs-comment"># 回车即可</span><br>Partition number (2-128, default 2):                  <span class="hljs-comment"># 回车即可</span><br>First sector (xx-xxxx, default xx):                     <span class="hljs-comment"># 回车即可</span><br>Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (xx-xxxx, default xxxx):      <span class="hljs-comment"># 回车即可</span><br><br>Created a new partiton 2 of <span class="hljs-built_in">type</span> <span class="hljs-string">&#x27;Linux filesystem&#x27;</span> and of size x GiB.<br>Partition <span class="hljs-comment">#2 contains a ext4 signature.</span><br><br>Do you want to remove the signature? [Y]es/[N]o: Y<br><br>The signature will be removed by a write <span class="hljs-built_in">command</span>.<br></code></pre></td></tr></table></figure><h5 id="分区创建完成"><a href="#分区创建完成" class="headerlink" title="分区创建完成"></a>分区创建完成</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): p             <span class="hljs-comment"># 输入 ‘p’ 来确认分区信息内容</span><br><br>----------------内容---------------<br>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<br>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<br><br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): w             <span class="hljs-comment"># 输入 ‘w’ 来写入分区</span><br>The partition table has been altered.<br>Calling ioctl() to re-rend partition table.<br>Syncing disks.<br></code></pre></td></tr></table></figure><h5 id="分区写入完成"><a href="#分区写入完成" class="headerlink" title="分区写入完成"></a>分区写入完成</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 对分区1 ( BOOT/EFI 分区 ) 进行格式化，引导分区必需要求 fat 格式</span><br>mkfs.fat -F32 引导分区         <span class="hljs-comment"># mkfs 是 Make File System 的缩写</span><br><br><span class="hljs-comment"># 对分区2 ( 主分区 ) 进行格式化，一般为 ext4 格式</span><br>mkfs.ext4 主分区<br></code></pre></td></tr></table></figure><h3 id="2-配置pacman"><a href="#2-配置pacman" class="headerlink" title="2. 配置pacman"></a>2. 配置<code>pacman</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/pacman.conf<br><br>住下看会找到 [core]、[extra]、[community] 这是软件源，在 vim 按 gf 进入文件<br><br>把 <span class="hljs-comment">#China源前面的注释去了</span><br></code></pre></td></tr></table></figure><ul><li>新版好像连上网就自动配置好源了</li></ul><h3 id="3-正式安装Arch-Linux"><a href="#3-正式安装Arch-Linux" class="headerlink" title="3. 正式安装Arch Linux"></a>3. 正式安装Arch Linux</h3><h4 id="先挂载要安装的主分区和引导分区"><a href="#先挂载要安装的主分区和引导分区" class="headerlink" title="先挂载要安装的主分区和引导分区"></a>先挂载要安装的主分区和引导分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看要安装系统的硬盘代号</span><br>fdisk -l<br><br>mount /dev/主分区 /mnt                 <span class="hljs-comment"># 挂载主分区到/mnt</span><br><span class="hljs-built_in">ls</span> /mnt<br><br><span class="hljs-built_in">mkdir</span> -p /mnt/boot/efi   <span class="hljs-comment"># 创建 /mnt/boot/efi 文件夹</span><br>mount /dev/引导分区 /mnt/boot/efi<span class="hljs-comment"># 挂载引导分区到 /mnt/boot/efi</span><br></code></pre></td></tr></table></figure><h4 id="正式安装"><a href="#正式安装" class="headerlink" title="正式安装"></a>正式安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装前先初始化 pacman</span><br>pacman-key --init<br>pacman-key --populate archlinux<br><br><span class="hljs-comment"># 更新 keyring (不用？)</span><br>pacman -Syyu<br><br><span class="hljs-comment"># 安装系统软件到 /dev/xxx 挂载点 即 /mnt 下</span><br><span class="hljs-comment"># 也可以安装 linux-lts linux-lts-headers</span><br><span class="hljs-comment"># vi vim nano zsh 等是一些常用软件，可以不安装……</span><br>pacstrap /mnt base base-devel linux linux-headers linux-firmware vi vim nano dhcpcd openssh grub zsh bash-completion dosfstools parted net-tools wget curl git<br></code></pre></td></tr></table></figure><h4 id="安装结束后的一些操作"><a href="#安装结束后的一些操作" class="headerlink" title="安装结束后的一些操作"></a>安装结束后的一些操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 生成 fs 表</span><br><span class="hljs-comment"># fstab 是 File Systems Table 的缩写，gen 是 generate 的缩写</span><br><span class="hljs-comment"># U是 UUIDs 的缩写，UUID 是 Universally Unique Identifier (通用唯一识别码)</span><br>genfstab -U /mnt &gt; /mnt/etc/fstab<br><br><span class="hljs-comment"># 查看一下有没有东西</span><br><span class="hljs-built_in">cat</span> /mnt/etc/fstab<br></code></pre></td></tr></table></figure><h3 id="3-安装完成后的一些操作"><a href="#3-安装完成后的一些操作" class="headerlink" title="3.  安装完成后的一些操作"></a>3.  安装完成后的一些操作</h3><h4 id="时间配置"><a href="#时间配置" class="headerlink" title="时间配置"></a>时间配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#进入系统</span><br>arch-chroot /mnt<br><br><span class="hljs-comment">#创建软链接</span><br><span class="hljs-built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br><br><span class="hljs-comment">#写入时间</span><br>hwclock --systohc<br></code></pre></td></tr></table></figure><h4 id="本地化"><a href="#本地化" class="headerlink" title="本地化"></a>本地化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 编辑 locale.gen 文件，把 #en_US.UTF-8 UTF-8 前的 # 号去掉</span><br>vim /etc/locale.gen<br><span class="hljs-comment"># 输入以下内容</span><br>en_US.UTF-8 UTF-8<br><br><span class="hljs-comment"># 本地化</span><br>locale-gen<br><br><span class="hljs-comment"># 编辑本地语言</span><br>vim /etc/locale.conf<br><span class="hljs-comment"># 输入以下内容</span><br>LANG=en_US.UTF-8<br><br><span class="hljs-comment"># 编辑主机名</span><br>vim /etc/hostname<br><span class="hljs-comment"># 输入主机名，我的主机名是 wind</span><br>wind<br><br><span class="hljs-comment"># 编辑hosts文件</span><br>vim /etc/hosts<br><span class="hljs-comment"># 输入以下内容</span><br>127.0.0.1       localhost<br>::1             localhost<br>127.0.1.1       wind.localdomain    wind<br></code></pre></td></tr></table></figure><h4 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 更改密码</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;password&quot;</span> | passwd --stdin root<br><span class="hljs-comment"># 或用 passwd</span><br>passwd<br></code></pre></td></tr></table></figure><h4 id="安装启动相关的程序"><a href="#安装启动相关的程序" class="headerlink" title="安装启动相关的程序"></a>安装启动相关的程序</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman-key --init<br>pacman-key --populate archlinux<br><br><span class="hljs-comment"># 此处的 “intel-ucode” 是根据你的处理器来决定的，可能是 “amd-ucode”，我的就是 amd</span><br>pacman -S grub efibootmgr amd-ucode os-prober<br><br><span class="hljs-comment"># 创建 grub 文件夹</span><br><span class="hljs-built_in">mkdir</span> /boot/grub<br><br><span class="hljs-comment"># 生成 grub 配置文件到 grub.cfg 中</span><br>grub-mkconfig &gt; /boot/grub/grub.cfg<br></code></pre></td></tr></table></figure><h4 id="安装grub"><a href="#安装grub" class="headerlink" title="安装grub"></a>安装grub</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装前先确认系统架构</span><br><span class="hljs-built_in">uname</span> -m<br><br><span class="hljs-comment"># 我的是 x86_64 结构，和 uefi+gpt 的</span><br>grub-install --target=x86_64-efi --efi-directory=/boot/efi<br><br><span class="hljs-comment"># 如果是 bios+mbr 的话用，/dev/xxx 是你的硬盘</span><br>grub-install --targe=i386-pc /dev/xxx<br></code></pre></td></tr></table></figure><h4 id="最后的一些工作"><a href="#最后的一些工作" class="headerlink" title="最后的一些工作"></a>最后的一些工作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动 dhcpcd 服务自动生成 /etc/resolv.conf</span><br>systemctl start dhcpcd<br>systemctl <span class="hljs-built_in">enable</span> dhcpcd<br><span class="hljs-comment"># 如果你用 NetworkManager 的话自行配置</span><br><br><span class="hljs-comment"># 重启</span><br>reboot<br></code></pre></td></tr></table></figure><h4 id="安装完成，重启后"><a href="#安装完成，重启后" class="headerlink" title="安装完成，重启后"></a>安装完成，重启后</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 开机设置字体大一点</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;setfont LatGrkCyr-12x22&#x27;</span> &gt;&gt; /etc/bashrc<br></code></pre></td></tr></table></figure><h4 id="新建一个用户"><a href="#新建一个用户" class="headerlink" title="新建一个用户"></a>新建一个用户</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># -G 是指定用户所在组，-s 是指定用户所用的 shell</span><br>useradd -m wind -G wheel -s /usr/bin/bash<br><span class="hljs-comment"># 修改用户密码</span><br>passwd wind<br>visudo<br><span class="hljs-comment"># 把 %wheel ALL=(ALL:ALL) ALL 前的注释去掉，如果没有就添加</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ArchLinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS Install Input</title>
    <link href="/2023/09/05/CentOS_Install_Input/"/>
    <url>/2023/09/05/CentOS_Install_Input/</url>
    
    <content type="html"><![CDATA[<h1 id="5-安装fctix输入法"><a href="#5-安装fctix输入法" class="headerlink" title="5. 安装fctix输入法"></a>5. 安装fctix输入法</h1><h2 id="5-1-安装额外源（如果安装了可忽略此步骤）"><a href="#5-1-安装额外源（如果安装了可忽略此步骤）" class="headerlink" title="5.1 安装额外源（如果安装了可忽略此步骤）"></a>5.1 安装额外源（如果安装了可忽略此步骤）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install epel-release<br></code></pre></td></tr></table></figure><h2 id="5-2-卸载ibus（此步是为了避免冲突）"><a href="#5-2-卸载ibus（此步是为了避免冲突）" class="headerlink" title="5.2 卸载ibus（此步是为了避免冲突）"></a>5.2 卸载ibus（此步是为了避免冲突）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -e --nodeps ibus<br></code></pre></td></tr></table></figure><h2 id="5-3-安装fcitx组件和im-chooser"><a href="#5-3-安装fcitx组件和im-chooser" class="headerlink" title="5.3 安装fcitx组件和im-chooser"></a>5.3 安装fcitx组件和im-chooser</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install fcitx*<br>yum -y install im-chooser<br></code></pre></td></tr></table></figure><h2 id="5-4-选择fcitx输入法"><a href="#5-4-选择fcitx输入法" class="headerlink" title="5.4 选择fcitx输入法"></a>5.4 选择fcitx输入法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">im-chooser<br></code></pre></td></tr></table></figure><p><img src="/images/CentOS_Install_Input/1.png" srcset="/img/loading.gif" lazyload></p><h2 id="5-5-自定义需要的输入法"><a href="#5-5-自定义需要的输入法" class="headerlink" title="5.5 自定义需要的输入法"></a>5.5 自定义需要的输入法</h2><p><img src="/images/CentOS_Install_Input/2.png" srcset="/img/loading.gif" lazyload></p><h2 id="5-6-最后的工作"><a href="#5-6-最后的工作" class="headerlink" title="5.6 最后的工作"></a>5.6 最后的工作</h2><h3 id="5-6-1-在-etc-bashrc和-zshrc中加入以下代码"><a href="#5-6-1-在-etc-bashrc和-zshrc中加入以下代码" class="headerlink" title="5.6.1 在&#x2F;etc&#x2F;bashrc和~&#x2F;.zshrc中加入以下代码"></a>5.6.1 在&#x2F;etc&#x2F;bashrc和~&#x2F;.zshrc中加入以下代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 在/etc/bashrc和~/.zshrc中加入以下代码</span><br><span class="hljs-built_in">export</span> GTK_IM_MODULE=fcitx<br><span class="hljs-built_in">export</span> QT_IM_MODULE=fcitx<br><span class="hljs-built_in">export</span> XMODIFIERS=@im=fcitx<br></code></pre></td></tr></table></figure><h3 id="5-6-2添加fcitx开机启动"><a href="#5-6-2添加fcitx开机启动" class="headerlink" title="5.6.2添加fcitx开机启动"></a>5.6.2添加fcitx开机启动</h3><p><img src="/images/CentOS_Install_Input/3.png" srcset="/img/loading.gif" lazyload></p><p><img src="/images/CentOS_Install_Input/4.png" srcset="/img/loading.gif" lazyload></p><p><img src="/images/CentOS_Install_Input/5.png" srcset="/img/loading.gif" lazyload></p><p>至此fcitx输入法安装完成！</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS Remove External Kernal</title>
    <link href="/2023/09/05/CentOS_Remove_External_Kernal/"/>
    <url>/2023/09/05/CentOS_Remove_External_Kernal/</url>
    
    <content type="html"><![CDATA[<h1 id="4-删除多余内核"><a href="#4-删除多余内核" class="headerlink" title="4.删除多余内核"></a>4.删除多余内核</h1><h2 id="4-1-打开终端，查看当前使用的内核"><a href="#4-1-打开终端，查看当前使用的内核" class="headerlink" title="4.1 打开终端，查看当前使用的内核"></a>4.1 打开终端，查看当前使用的内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -a<br></code></pre></td></tr></table></figure><h2 id="4-2-查看所有内核选项"><a href="#4-2-查看所有内核选项" class="headerlink" title="4.2 查看所有内核选项"></a>4.2 查看所有内核选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -qa | grep kernel<br></code></pre></td></tr></table></figure><h2 id="4-3-进入root模式，删除多余内核"><a href="#4-3-进入root模式，删除多余内核" class="headerlink" title="4.3 进入root模式，删除多余内核"></a>4.3 进入root模式，删除多余内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum remove 多余内核<br></code></pre></td></tr></table></figure><h2 id="4-4-重新编译引导（可不做）"><a href="#4-4-重新编译引导（可不做）" class="headerlink" title="4.4 重新编译引导（可不做）"></a>4.4 重新编译引导（可不做）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grub2-mkconfig -o /boot/grub2/grub.cfg<br></code></pre></td></tr></table></figure><h2 id="4-5-重启系统"><a href="#4-5-重启系统" class="headerlink" title="4.5 重启系统"></a>4.5 重启系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">reboot<br><span class="hljs-comment"># 或者</span><br>init 6<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS Install XFCE Windows Manager</title>
    <link href="/2023/09/04/CentOS_Install_XFCE-WM/"/>
    <url>/2023/09/04/CentOS_Install_XFCE-WM/</url>
    
    <content type="html"><![CDATA[<h1 id="3-安装-XFCE-桌面环境"><a href="#3-安装-XFCE-桌面环境" class="headerlink" title="3. 安装 XFCE 桌面环境"></a>3. 安装 <a href="https://www.gnome.org/">XFCE</a> 桌面环境</h1><p>桌面环境有很多，我选择 <a href="https://www.xfce.org/">XFCE</a> ，因为相对于 <a href="https://www.gnome.org/">GNOME</a> 来说快，相对于 <a href="https://i3wm.org/">I3</a> 又方便。</p><p>有个不𠀾孬的地方是 CentOS 用 XFCE 可能会有一些 VMTools 的问题，以前发现的</p><p><a href="https://i3wm.org/">I3</a> 也不错，不过我没用过</p><h2 id="3-1-安装额外源"><a href="#3-1-安装额外源" class="headerlink" title="3.1 安装额外源"></a>3.1 安装额外源</h2><p>在 root 用户身份下输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装额外源</span><br>yum -y install epel-release<br><br><span class="hljs-comment"># 清理yum缓存</span><br>yum clean all<br><br><span class="hljs-comment"># 升级一下，不然下面的重建缓存命令用不了</span><br>yum upgrade -y<br><br><span class="hljs-comment"># 重建yum缓存</span><br>yum makecache<br></code></pre></td></tr></table></figure><h2 id="3-2-安装xfce"><a href="#3-2-安装xfce" class="headerlink" title="3.2 安装xfce"></a>3.2 安装xfce</h2><p>在root用户身份下输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看组信息</span><br>yum grouplist<br><br><span class="hljs-comment"># 安装&quot;X Window system&quot;组</span><br>yum -y groupinstall <span class="hljs-string">&quot;X Window system&quot;</span><br><br><span class="hljs-comment"># 安装xfce组</span><br>yum -y groupinstall xfce<br><br><span class="hljs-comment"># 安装wqy文泉驿字体</span><br>yum -y install wqy*<br><br><span class="hljs-comment"># 设置默认的界面是graphical</span><br>systemctl set-default graphical.target<br><br><span class="hljs-comment"># 切换到图形界面</span><br>systemctl isolate graphical.target<br></code></pre></td></tr></table></figure><blockquote><p>安装好后应该会自动安装一个 <a href="https://wiki.gnome.org/Projects/GDM">GDM - GNOME Display Manager</a> ，因为没有这个东西是没法进入 XFCE 桌面的。</p><p>类似好像有 <a href="https://github.com/canonical/lightdm">LightDM - Light Display Manager</a> 等等</p></blockquote><h2 id="3-3-用xfce登陆hadoop"><a href="#3-3-用xfce登陆hadoop" class="headerlink" title="3.3 用xfce登陆hadoop"></a>3.3 用xfce登陆hadoop</h2><h3 id="3-3-1-点击hadoop用户"><a href="#3-3-1-点击hadoop用户" class="headerlink" title="3.3.1 点击hadoop用户"></a>3.3.1 点击hadoop用户</h3><p><img src="/images/CentOS_Install_XFCE-WM/1.png" srcset="/img/loading.gif" lazyload></p><h3 id="3-3-2-点击小齿轮–-选择Xfce会话-，不然会进入Openbox没有界面"><a href="#3-3-2-点击小齿轮–-选择Xfce会话-，不然会进入Openbox没有界面" class="headerlink" title="3.3.2 &#x3D;&#x3D;点击小齿轮–&gt;选择Xfce会话&#x3D;&#x3D;，不然会进入Openbox没有界面"></a>3.3.2 &#x3D;&#x3D;点击小齿轮–&gt;选择Xfce会话&#x3D;&#x3D;，不然会进入Openbox没有界面</h3><p><img src="/images/CentOS_Install_XFCE-WM/2.png" srcset="/img/loading.gif" lazyload></p><h3 id="3-3-3-选择使用默认配置"><a href="#3-3-3-选择使用默认配置" class="headerlink" title="3.3.3 选择使用默认配置"></a>3.3.3 选择使用默认配置</h3><p><img src="/images/CentOS_Install_XFCE-WM/3.png" srcset="/img/loading.gif" lazyload></p><p>至此xfce桌面环境安装完成！</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS Install VMTools</title>
    <link href="/2023/09/04/CentOS_Install_VMTools/"/>
    <url>/2023/09/04/CentOS_Install_VMTools/</url>
    
    <content type="html"><![CDATA[<h1 id="2-给CentOS安装vmtools"><a href="#2-给CentOS安装vmtools" class="headerlink" title="2. 给CentOS安装vmtools"></a>2. 给CentOS安装vmtools</h1><h2 id="2-1-更改为使用物理驱动器"><a href="#2-1-更改为使用物理驱动器" class="headerlink" title="2.1 更改为使用物理驱动器"></a>2.1 更改为使用物理驱动器</h2><p><img src="/images/CentOS_Install_VMTools/1.png" srcset="/img/loading.gif" lazyload></p><h2 id="2-2-在VMware上依次选择虚拟机–-重新安装VMware-Tools"><a href="#2-2-在VMware上依次选择虚拟机–-重新安装VMware-Tools" class="headerlink" title="2.2 在VMware上依次选择虚拟机–&gt;重新安装VMware Tools"></a>2.2 在VMware上依次选择虚拟机–&gt;重新安装VMware Tools</h2><p><img src="/images/CentOS_Install_VMTools/2.png" srcset="/img/loading.gif" lazyload></p><h2 id="2-3-在root用户下输入以下命令"><a href="#2-3-在root用户下输入以下命令" class="headerlink" title="2.3 在root用户下输入以下命令"></a>2.3 在root用户下输入以下命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建一个目录/soft在根目录下用于存放软件</span><br><span class="hljs-built_in">mkdir</span> /soft<br><br><span class="hljs-comment"># 把该目录的权限所属用户改为hadoop</span><br><span class="hljs-built_in">chown</span> -R　hadoop /soft<br><br><span class="hljs-comment"># 把该目录的权限所属组改为hadoop</span><br><span class="hljs-built_in">chgrp</span> -R　hadoop /soft<br><br><span class="hljs-comment"># 在/mnt下创建目录cdrom</span><br><span class="hljs-built_in">mkdir</span> /mnt/cdrom<br><br><span class="hljs-comment"># 把cd挂载到/mnt/cdrom下</span><br>mount /dev/cdrom /mnt/cdrom<br><br><span class="hljs-comment"># 复制cdrom中的VMwareTools包到/soft目录下</span><br><span class="hljs-built_in">cp</span> /mnt/cdrom/VMwareTools-xx.xx.xx.tar.gz /soft<br><br><span class="hljs-comment"># 取消挂载</span><br>umount /mnt/cdrom<br><br><span class="hljs-comment"># 切换到/soft目录下</span><br><span class="hljs-built_in">cd</span> /soft<br><br><span class="hljs-comment"># 查看一下当前文件</span><br><span class="hljs-built_in">ls</span><br><br><span class="hljs-comment"># 解压VMwareTools压缩包</span><br>tar -xzvf VMwareTools-xx.xx.xx.tar.gz<br><br><span class="hljs-comment"># 切换到解压目录下</span><br><span class="hljs-built_in">cd</span> vmware-tools-distrib<br><br><span class="hljs-comment"># 运行vmware tools安装脚本</span><br>./vmware-install.pl<br></code></pre></td></tr></table></figure><p>以上命令中最后一条命令有可能运行不了，解决办法是更新一下系统软件，其实是gcc没安装的问题，也可以借此顺便安装一下vim编辑器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 更新软件</span><br>yum upgrade -y<br><span class="hljs-comment"># 或者</span><br>yum update -y<br><br><span class="hljs-comment"># 安装gcc</span><br>yum -y install gcc<br><span class="hljs-comment"># 安装vim编译器</span><br>yum -y install vim<br></code></pre></td></tr></table></figure><p>再次安装vmware-tools就不会报错了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 运行vmware tools安装脚本</span><br>./vmware-install.pl<br></code></pre></td></tr></table></figure><p>在安装过程中有许多选项，遇到目录按回车，遇到yes&#x2F;no则输入yes回车</p><h2 id="2-4-卸载-VMware-Tools"><a href="#2-4-卸载-VMware-Tools" class="headerlink" title="2.4 卸载 VMware Tools"></a>2.4 卸载 VMware Tools</h2><p>如何卸载 VMware Tools 呢？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 以root身份运行以下命令即可</span><br>vmware-uninstall-tools.pl<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS Install</title>
    <link href="/2023/09/04/CentOS_Install/"/>
    <url>/2023/09/04/CentOS_Install/</url>
    
    <content type="html"><![CDATA[<h1 id="1-安装CentOS"><a href="#1-安装CentOS" class="headerlink" title="1. 安装CentOS"></a>1. 安装CentOS</h1><h2 id="1-1-更改语言"><a href="#1-1-更改语言" class="headerlink" title="1.1 更改语言"></a>1.1 更改语言</h2><p><img src="/images/CentOS_Install/1.png" srcset="/img/loading.gif" lazyload></p><h2 id="1-2-手动进行分区"><a href="#1-2-手动进行分区" class="headerlink" title="1.2 手动进行分区"></a>1.2 手动进行分区</h2><p><img src="/images/CentOS_Install/2.png" srcset="/img/loading.gif" lazyload></p><h2 id="1-3-根目录50G、boot目录4G、swap交换分区6G"><a href="#1-3-根目录50G、boot目录4G、swap交换分区6G" class="headerlink" title="1.3 根目录50G、boot目录4G、swap交换分区6G"></a>1.3 根目录50G、boot目录4G、swap交换分区6G</h2><p><img src="/images/CentOS_Install/3.png" srcset="/img/loading.gif" lazyload></p><h2 id="1-4-点击接受更改"><a href="#1-4-点击接受更改" class="headerlink" title="1.4 点击接受更改"></a>1.4 点击接受更改</h2><p><img src="/images/CentOS_Install/4.png" srcset="/img/loading.gif" lazyload></p><h2 id="1-5-更改网络和主机名，主机名为master以太网开关打开"><a href="#1-5-更改网络和主机名，主机名为master以太网开关打开" class="headerlink" title="1.5 更改网络和主机名，主机名为master以太网开关打开"></a>1.5 更改网络和主机名，主机名为master以太网开关打开</h2><p><img src="/images/CentOS_Install/5.png" srcset="/img/loading.gif" lazyload></p><h2 id="1-6-设置root密码和新建一个名为hadoop的用户"><a href="#1-6-设置root密码和新建一个名为hadoop的用户" class="headerlink" title="1.6 设置root密码和新建一个名为hadoop的用户"></a>1.6 设置root密码和新建一个名为hadoop的用户</h2><p><img src="/images/CentOS_Install/6.png" srcset="/img/loading.gif" lazyload></p><h2 id="1-7-点击重启"><a href="#1-7-点击重启" class="headerlink" title="1.7 点击重启"></a>1.7 点击重启</h2><p><img src="/images/CentOS_Install/7.png" srcset="/img/loading.gif" lazyload></p><p>至此安装CentOS成功了</p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Install  VMWare-Tools</title>
    <link href="/2023/08/27/Arch_Install_VMWare-Tools/"/>
    <url>/2023/08/27/Arch_Install_VMWare-Tools/</url>
    
    <content type="html"><![CDATA[<h1 id="Arch-Linux-安装-VMWare-Tools"><a href="#Arch-Linux-安装-VMWare-Tools" class="headerlink" title="Arch Linux 安装 VMWare-Tools"></a>Arch Linux 安装 VMWare-Tools</h1><h2 id="第一步：安装软件"><a href="#第一步：安装软件" class="headerlink" title="第一步：安装软件"></a>第一步：安装软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 open-vm-tools</span><br>sudo pacman -S open-vm-tools<br><br><span class="hljs-comment"># 不安装这个就会复制粘贴失败</span><br>sudo pacman -S gtkmm3<br></code></pre></td></tr></table></figure><h2 id="第二步：打开服务"><a href="#第二步：打开服务" class="headerlink" title="第二步：打开服务"></a>第二步：打开服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> vmtoolsd.service<br>sudo systemctl <span class="hljs-built_in">enable</span> vmware-vmblock-fuse.service<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ArchLinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DataStorageUnitConvertRelationship</title>
    <link href="/2023/08/27/DataStorageUnitConvertRelationship/"/>
    <url>/2023/08/27/DataStorageUnitConvertRelationship/</url>
    
    <content type="html"><![CDATA[<h1 id="数据存储单位之间的换算关系"><a href="#数据存储单位之间的换算关系" class="headerlink" title="数据存储单位之间的换算关系"></a>数据存储单位之间的换算关系</h1><table width="40%" height="100%" border="1px solid black" align="center">    <th align="center"><font size="5px">单位</font></th><th align="center"><font size="5px">换算关系</font></th>    <tr>        <td align="center">Byte（字节）</td><td align="center">1 Byte = 8 bit</td>    </tr>    <tr>        <td align="center">KB（Kilobyte，千字节）</td><td align="center">1 KB = 1024 Byte</td>    </tr>    <tr>        <td align="center">MB（Megabyte，兆字节）</td><td align="center">1 MB = 1024 KB</td>    </tr>    <tr>        <td align="center">GB（Gigabyte，吉字节）</td><td align="center">1 GB = 1024 MB</td>    </tr>    <tr>        <td align="center">TB（Trillionbyte，太字节）</td><td align="center">1 TB = 1024 GB</td>    </tr>    <tr>        <td align="center">PB（Petabyte，拍字节）</td><td align="center">1 PB = 1024 TB</td>    </tr>    <tr>        <td align="center">EB（Exabyte，艾字节）</td><td align="center">1 EB = 1024 PB</td>    </tr>    <tr>        <td align="center">ZB（Zettabyte，译字节）</td><td align="center">1 ZB = 1024 EB</td>    </tr></table>]]></content>
    
    
    
    <tags>
      
      <tag>common_sence</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSHLoginGithub</title>
    <link href="/2023/08/12/UseSSHwithTokenLoginGithub/"/>
    <url>/2023/08/12/UseSSHwithTokenLoginGithub/</url>
    
    <content type="html"><![CDATA[<h1 id="Github-使用-SSH-免密与-Token-登录配置"><a href="#Github-使用-SSH-免密与-Token-登录配置" class="headerlink" title="Github 使用 SSH 免密与 Token 登录配置"></a>Github 使用 SSH 免密与 Token 登录配置</h1><blockquote><p>参考文章：</p><ol><li><a href="https://cloud.tencent.com/developer/article/1861466">https://cloud.tencent.com/developer/article/1861466</a></li><li><a href="https://leezhiy.github.io/2020/03/15/2020-03-15-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github-Pages-%E6%89%98%E7%AE%A1-Hexo%EF%BC%89/">https://leezhiy.github.io/2020/03/15/2020-03-15-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Github-Pages-%E6%89%98%E7%AE%A1-Hexo%EF%BC%89/</a></li><li><a href="https://juejin.cn/post/7129443602379309086">https://juejin.cn/post/7129443602379309086</a></li></ol><p>环境：Windows 10</p><p>写这篇文章原因：配置博客要用到</p></blockquote><h2 id="1-生成密钥并添加到-Github-上"><a href="#1-生成密钥并添加到-Github-上" class="headerlink" title="1. 生成密钥并添加到 Github 上"></a>1. 生成密钥并添加到 <a href="https://github.com/">Github</a> 上</h2><ul><li><p>回到家目录，在家目录下创建一个 <code>.ssh</code> 文件夹，在 <code>.ssh</code> 中生成两个密钥</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># change directory</span><br><span class="hljs-built_in">cd</span> /d C:\Users\yourname\<br><br><span class="hljs-comment"># make a new directory named `.ssh`</span><br><span class="hljs-built_in">mkdir</span> .ssh<br><br><span class="hljs-comment"># go to `.ssh`</span><br><span class="hljs-built_in">cd</span> .ssh<br><br><span class="hljs-comment"># generate a ssh-key</span><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;youremail@example.com&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>到这里会提示你输入一个存放密钥的路径，建议直接回车就好，那样子就会生成在你当下的目录，即 <code>.ssh</code> 里。</p></li><li><p>接着会提示你输入一个私钥密码 passphrase ，如果你设置了，以后每次使用 SSH 登录都要输入。</p></li><li><p>接着把 <code>id_rsa.pub</code> 中的内容复制，待会在 <a href="https://github.com/">github</a> 中用。</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># this command means that copy content to clipboard</span><br>clip &lt; .\id_rsa.pub<br></code></pre></td></tr></table></figure></li><li><p>接着到 <a href="https://github.com/">github</a> 上登录，然后依次点击：你的头像 —&gt;&gt; Settings —&gt;&gt; SSH and GPG keys —&gt;&gt; New SSH key</p></li><li><p>然后 Title 随便写，再把刚刚所复制的内容粘贴到 Key 的输入框上， Key type 默认就好，再点击 Add SSH key 就完成添加了。</p></li></ul><h2 id="2-测试是否添加成功"><a href="#2-测试是否添加成功" class="headerlink" title="2. 测试是否添加成功"></a>2. 测试是否添加成功</h2><ul><li><p>在测试之前需要下载安装 <a href="https://git-scm.com/">git</a> 和稍稍配置一下。</p></li><li><p>git 下载地址：<a href="https://git-scm.com/">https://git-scm.com/</a></p></li><li><p>下载好之后，默认点下一步安装就行，然后打开 <code>git bash</code> 在里面输入以下代码：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># config your github name</span><br>git config --global user.name  <span class="hljs-string">&quot;Your Github Profile Name&quot;</span><br><span class="hljs-comment"># config your github email</span><br>git config --global user.email <span class="hljs-string">&quot;email@yourgithubmail.com&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>然后用以下命令进行测试：注意：<a href="mailto:&#103;&#x69;&#116;&#64;&#103;&#105;&#116;&#x68;&#117;&#98;&#x2e;&#99;&#x6f;&#109;">&#103;&#x69;&#116;&#64;&#103;&#105;&#116;&#x68;&#117;&#98;&#x2e;&#99;&#x6f;&#109;</a> 不要更改！</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure></li><li><p>如果刚刚生成密钥时配置了密码，就会提示输入密码</p></li><li><p>如果出现以下内容就说明配置成功了：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Hi yourgithubname! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure></li><li><p>也有可能会出现一些错误，例如我当时就出现了以下报错：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kex_exchange_identification: Connection closed by remote host<br></code></pre></td></tr></table></figure></li><li><p>出现以下错误解决方案：1、关代理；2、将 <a href="https://github.com/">Github</a> 的连接端口从 22 更改为 443 ，具体操作如下：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># back to `.ssh` directory</span><br><span class="hljs-built_in">cd</span> C:\Users\yourname\.ssh<br><br><span class="hljs-comment"># create a `config` file of git</span><br><span class="hljs-built_in">touch</span> config<br><br><span class="hljs-comment"># enter code in `config` file</span><br>vim config<br>----------------code----------------<br>Host github.com<br>    HostName ssh.github.com<br>    User git<br>    Port 443<br>----------------code----------------<br></code></pre></td></tr></table></figure></li><li><p>再测试应该没什么问题了，没有 vim 编辑器用记事本也行，创建 <code>config</code> 文件在 <code>.ssh</code> 目录下，输入以上的 <code>code</code> 部分代码。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>SSH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vim 配置 coc 插件记录</title>
    <link href="/2023/08/11/vim-coc_config/"/>
    <url>/2023/08/11/vim-coc_config/</url>
    
    <content type="html"><![CDATA[<h1 id="vim-配置-coc-插件记录"><a href="#vim-配置-coc-插件记录" class="headerlink" title="vim 配置 coc 插件记录"></a>vim 配置 coc 插件记录</h1><blockquote><p>本文使用环境：Windows + gVim</p><p>建议先看官方文档：<a href="https://github.com/neoclide/coc.nvim">https://github.com/neoclide/coc.nvim</a></p></blockquote><h2 id="第一步：环境配置"><a href="#第一步：环境配置" class="headerlink" title="第一步：环境配置"></a>第一步：环境配置</h2><h3 id="安装-vim-plug"><a href="#安装-vim-plug" class="headerlink" title="安装 vim-plug"></a>安装 vim-plug</h3><ul><li>到 <a href="https://github.com/junegunn/vim-plug">https://github.com/junegunn/vim-plug</a> 上下载 <code>plug.vim</code> 放到 <code>.vim/autoload</code> 目录下</li><li>如果是 <a href="https://github.com/vim/vim-win32-installer/releases">gvim</a> 则放在 gvim 目录下的 autoload 里</li><li>也可以直接用以下官方给出的命令</li></ul><h4 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h4><ul><li><p>Unix</p>  <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">curl -fLo ~/.<span class="hljs-keyword">vim</span>/autoload/plug.<span class="hljs-keyword">vim</span> --create-dirs \<br>    https://raw.githubusercontent.<span class="hljs-keyword">com</span>/junegunn/<span class="hljs-keyword">vim</span>-plug/master/plug.<span class="hljs-keyword">vim</span><br></code></pre></td></tr></table></figure></li><li><p>You can automate the process by putting the command in your Vim configuration file as suggested <a href="https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation">here</a>.</p></li><li><p>Windows (PowerShell)</p>  <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">iwr -useb https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/junegunn/</span>vim-plug<span class="hljs-regexp">/master/</span>plug.vim |`<br>    ni <span class="hljs-variable">$HOME</span><span class="hljs-regexp">/vimfiles/</span>autoload/plug.vim -Force<br></code></pre></td></tr></table></figure></li></ul><h4 id="Neovim"><a href="#Neovim" class="headerlink" title="Neovim"></a>Neovim</h4><ul><li><p>Unix, Linux</p>  <figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs roboconf">sh -c &#x27;curl -fLo &quot;$&#123;<span class="hljs-attribute">XDG_DATA_HOME</span>:-$HOME/<span class="hljs-variable">.local</span>/share&#125;&quot;/nvim/site/autoload/plug<span class="hljs-variable">.vim</span> --create-dirs \<br>       https://raw<span class="hljs-variable">.githubusercontent</span><span class="hljs-variable">.com</span>/junegunn/vim-plug/master/plug<span class="hljs-variable">.vim</span>&#x27;<br></code></pre></td></tr></table></figure></li><li><p>Linux (Flatpak)</p>  <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -fLo ~<span class="hljs-regexp">/.var/</span>app<span class="hljs-regexp">/io.neovim.nvim/</span>data<span class="hljs-regexp">/nvim/</span>site<span class="hljs-regexp">/autoload/</span>plug.vim --create-dirs \<br>    https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/junegunn/</span>vim-plug<span class="hljs-regexp">/master/</span>plug.vim<br></code></pre></td></tr></table></figure></li><li><p>Windows (PowerShell)</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">iwr</span> <span class="hljs-literal">-useb</span> https://raw.githubusercontent.com/junegunn/vim<span class="hljs-literal">-plug</span>/master/plug.vim |`<br>    <span class="hljs-built_in">ni</span> <span class="hljs-string">&quot;<span class="hljs-variable">$</span>(@(<span class="hljs-variable">$env:XDG_DATA_HOME</span>, <span class="hljs-variable">$env:LOCALAPPDATA</span>)[<span class="hljs-variable">$null</span> -eq <span class="hljs-variable">$env:XDG_DATA_HOME</span>])/nvim-data/site/autoload/plug.vim&quot;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h3><ul><li>官网地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></li><li>官网教学：<a href="https://nodejs.org/en/download/package-manager">https://nodejs.org/en/download/package-manager</a></li></ul><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><ul><li>直接到官网下载安装就行</li><li>或者用包管理器： <a href="https://github.com/microsoft/winget-cli">winget</a>、<a href="https://scoop.sh/">scoop</a>、<a href="https://community.chocolatey.org/">choco</a> 等…</li><li>使用 <a href="https://github.com/coreybutler/nvm-windows">NVM</a> 也可以</li></ul><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><ul><li><p>用对应的包管理器安装</p><ul><li><p>Arch Linux</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pacman -S nodejs npm<br></code></pre></td></tr></table></figure></li><li><p>Debian，可以参考<a href="https://linux265.com/news/3798.html">这篇文章</a></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install nodejs npm<br></code></pre></td></tr></table></figure></li></ul></li><li><p>使用 <a href="https://github.com/coreybutler/nvm-windows">NVM</a> 也可以</p></li></ul><h2 id="第二步：编写个人配置-vimrc"><a href="#第二步：编写个人配置-vimrc" class="headerlink" title="第二步：编写个人配置 vimrc"></a>第二步：编写个人配置 <code>vimrc</code></h2><ul><li><p>在 <code>~/.vim</code> 中新建一个 <code>vimrc</code> 文件</p></li><li><p>如果是 <a href="https://github.com/vim/vim-win32-installer/releases">gvim</a> 则在 gvim 目录下新建一个 <code>_vrimc</code> 文件</p></li><li><p>具体可以用 <code>vim --version</code> 查看</p></li><li><p>在 <code>vimrc</code> 中添加以下代码：</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vimscript">call plug#begin()<br>    Plug &#x27;neoclide/coc.nvim&#x27;, &#123;&#x27;branch&#x27;: &#x27;release&#x27;&#125;<br>call plug#end()<br></code></pre></td></tr></table></figure></li><li><p>然后保存、退出、重新进入 <code>vim</code> ，输入 <code>:PlugInstall</code> 进行插件的安装</p></li><li><p>安装好后重启 <code>vim</code> 用 <code>:CocInfo</code> 查看状态，<code>nvim</code> 用 <code>:checkhealth</code>。</p></li><li><p>可能提示什么没启动，用 <code>:CocStart</code> 就行了。</p></li></ul><h2 id="第三步：安装提示插件"><a href="#第三步：安装提示插件" class="headerlink" title="第三步：安装提示插件"></a>第三步：安装提示插件</h2><ul><li><p>在 <code>vim</code> 中直接用 <code>:CocInstall &lt;插件名&gt;</code> 来进行安装，例：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:CocInstall coc-json coc-tsserver<br></code></pre></td></tr></table></figure></li><li><p>建议先安装一个提示插件</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:CocInstall coc-marketplace coc-vimlsp<br></code></pre></td></tr></table></figure></li><li><p>可以先看看官方 <a href="https://github.com/neoclide/coc.nvim/wiki/Language-servers">Wiki</a></p></li><li><p>我是要学习 <code>C</code> 的，故配置一个</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:CocInstall coc-clangd<br></code></pre></td></tr></table></figure><p>  到  <a href="https://github.com/clangd/clangd">clangd</a> 上面下载相应的版本，并解压，添加到环境变量中</p><p>  再输入 <code>:CocConfig</code> 进入配置文件，输入：</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;languageserver&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;clangd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;command&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;clangd&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;rootPatterns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;compile_flags.txt&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;compile_commands.json&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;filetypes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;c&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;cc&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;cpp&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;c++&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;objc&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;objcpp&quot;</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Abundant&amp;Deficient&amp;Perfect_Number</title>
    <link href="/2023/08/10/abundant&amp;Deficient&amp;Perfect_Number/"/>
    <url>/2023/08/10/abundant&amp;Deficient&amp;Perfect_Number/</url>
    
    <content type="html"><![CDATA[<h1 id="盈数，亏数和完全数的定义"><a href="#盈数，亏数和完全数的定义" class="headerlink" title="盈数，亏数和完全数的定义"></a>盈数，亏数和完全数的定义</h1><h2 id="亏数"><a href="#亏数" class="headerlink" title="亏数"></a>亏数</h2><p>在数论中，若一个正整数除了本身外之所有因子之和比此数自身小，则称此数为亏数。<br>比如 $4$ ，其真因子 $1+2&#x3D;3 &lt; 4$ ，就是亏数。<br>亏数有 $1, 2, 3, 4, 5, 7, \dots \dots$</p><h2 id="盈数（丰数、过剩数）"><a href="#盈数（丰数、过剩数）" class="headerlink" title="盈数（丰数、过剩数）"></a>盈数（丰数、过剩数）</h2><p>与亏数相对的是盈数（又称丰数，过剩数），除去它本身以外的一切正因子和大于它本身。<br>比如： $12, 18, 20, 24 \dots \dots$</p><h2 id="完全数"><a href="#完全数" class="headerlink" title="完全数"></a>完全数</h2><p>这样，所有正的真因子之和与它本身相等的就是完全数了。</p><p>完全数，又称完美数或完备数。它所有的真因子（即除了自身以外的约数）的和，恰好等于它本身。<br>完全数有 $6, 28, 496, 8128 \dots \dots$</p>]]></content>
    
    
    
    <tags>
      
      <tag>Math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>taylor&#39;s theorem</title>
    <link href="/2023/08/10/theorem/"/>
    <url>/2023/08/10/theorem/</url>
    
    <content type="html"><![CDATA[<h1 id="泰勒公式的推导过程"><a href="#泰勒公式的推导过程" class="headerlink" title="泰勒公式的推导过程"></a>泰勒公式的推导过程</h1><p><font size="5px">设函数 $x_0 &#x3D; 0$ 即 $x$ 在 $0$ 处有不限的导数，则</font></p><p>\begin{align}</p><p>\large<br>{f(x)} &amp;\large{&#x3D; a_0 (x-x_0)^0 + a_1 (x-x_0)^1 + a_2 (x-x_0)^2 + \cdots + a_n (x-x_0)^n + \cdots}<br>\ \<br>&amp;\large{&#x3D; a_0 + a_1 x + a_2 x^2 + a_3 x^3 + \cdots + a_n x^n + \cdots}</p><p>\end{align}</p><p><font size="5px">我们可以轻易知道：</font></p><p>\begin{align}</p><p>\large{<br>f(0)} &amp; \large{&#x3D; a_0 &#x3D; 0! a_0}\<br>\large{f’(0)} &amp; \large{&#x3D; a_1 &#x3D; 1! a_1}\<br>\large{f’’(0)} &amp; \large{&#x3D; 2 a_2 &#x3D; 2! a_2}\<br>\large{f’’’(0)} &amp; \large{&#x3D; 6 a_3 &#x3D; 3! a_3}\</p><p>\vdots\<br>\vdots\</p><p>f^{(n)}(0) &amp; \large{&#x3D; n! a_n} </p><p>\end{align}</p><p><font size="5px">故：</font></p><p>$\large {a_n &#x3D; \dfrac {f^{(n)}(0)} {n !} }$</p><p><font size="5px">从而：</font></p><p>$\large{f(x) &#x3D; \sum_{i&#x3D;0}^n a_i , x_i + R(x)} ,,,, (R(x) 为余项)$<br>$\$<br>$\large{其中：}$<br>$\$<br>$\large{a_i &#x3D; \dfrac {f^{(i)} (0)} {i !}}$</p>]]></content>
    
    
    
    <tags>
      
      <tag>Math</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
